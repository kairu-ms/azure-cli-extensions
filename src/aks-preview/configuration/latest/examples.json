{
  "created": "2021-02-22 14:01:48.617574",
  "az": {
    "command-groups": {
      "aks": {
        "commands": {
          "browse": [],
          "create": [
            {
              "name": "Create a Kubernetes cluster with a larger node pool.",
              "text": "az aks create -g MyResourceGroup -n MyManagedCluster --node-count 7"
            },
            {
              "name": "Create a Kubernetes cluster with a specific version.",
              "text": "az aks create -g MyResourceGroup -n MyManagedCluster --kubernetes-version 1.13.9"
            },
            {
              "name": "Create a Kubernetes cluster with an existing SSH public key.",
              "text": "az aks create -g MyResourceGroup -n MyManagedCluster --ssh-key-value /path/to/publickey"
            },
            {
              "name": "Create a kubernetes cluster with EncryptionAtHost enabled.",
              "text": "az aks create -g MyResourceGroup -n MyManagedCluster --enable-encryption-at-host"
            },
            {
              "name": "Create a kubernetes cluster with a standard SKU load balancer, with two outbound AKS managed IPs an idle flow timeout of 5 minutes and 8000 allocated ports per machine",
              "text": "az aks create -g MyResourceGroup -n MyManagedCluster --load-balancer-managed-outbound-ip-count 2 --load-balancer-idle-timeout 5 --load-balancer-outbound-ports 8000"
            },
            {
              "name": "Create a kubernetes cluster with authorized apiserver IP ranges.",
              "text": "az aks create -g MyResourceGroup -n MyManagedCluster --api-server-authorized-ip-ranges 193.168.1.0/24,194.168.1.0/24,195.168.1.0"
            },
            {
              "name": "Create a kubernetes cluster with basic SKU load balancer and AvailabilitySet vm set type.",
              "text": "az aks create -g MyResourceGroup -n MyManagedCluster --load-balancer-sku basic --vm-set-type AvailabilitySet"
            },
            {
              "name": "Create a kubernetes cluster with cluster autosclaler enabled.",
              "text": "az aks create -g MyResourceGroup -n MyManagedCluster --kubernetes-version 1.13.9 --node-count 3 --enable-cluster-autoscaler --min-count 1 --max-count 5"
            },
            {
              "name": "Create a kubernetes cluster with custom tags",
              "text": "az aks create -g MyResourceGroup -n MyManagedCluster --tags \"foo=bar\" \"baz=qux\""
            },
            {
              "name": "Create a kubernetes cluster with default kubernetes vesrion, default SKU load balancer(standard) and default vm set type(VirtualMachineScaleSets).",
              "text": "az aks create -g MyResourceGroup -n MyManagedCluster"
            },
            {
              "name": "Create a kubernetes cluster with ephemeral os enabled.",
              "text": "az aks create -g MyResourceGroup -n MyManagedCluster --node-osdisk-type Ephemeral --node-osdisk-size 48"
            },
            {
              "name": "Create a kubernetes cluster with k8s 1.13.9 but use vmas.",
              "text": "az aks create -g MyResourceGroup -n MyManagedCluster --kubernetes-version 1.13.9 --vm-set-type AvailabilitySet"
            },
            {
              "name": "Create a kubernetes cluster with managed AAD enabled.",
              "text": "az aks create -g MyResourceGroup -n MyManagedCluster --enable-aad --aad-admin-group-object-ids <id-1,id-2> --aad-tenant-id <id>"
            },
            {
              "name": "Create a kubernetes cluster with server side encryption using your owned key.",
              "text": "az aks create -g MyResourceGroup -n MyManagedCluster --node-osdisk-diskencryptionset-id <disk-encryption-set-resource-id>"
            },
            {
              "name": "Create a kubernetes cluster with standard SKU load balancer and two AKS created IPs for the load balancer outbound connection usage.",
              "text": "az aks create -g MyResourceGroup -n MyManagedCluster --load-balancer-managed-outbound-ip-count 2"
            },
            {
              "name": "Create a kubernetes cluster with standard SKU load balancer and use the provided public IP prefixes for the load balancer outbound connection usage.",
              "text": "az aks create -g MyResourceGroup -n MyManagedCluster --load-balancer-outbound-ip-prefixes <ip-prefix-resource-id-1,ip-prefix-resource-id-2>"
            },
            {
              "name": "Create a kubernetes cluster with standard SKU load balancer and use the provided public IPs for the load balancer outbound connection usage.",
              "text": "az aks create -g MyResourceGroup -n MyManagedCluster --load-balancer-outbound-ips <ip-resource-id-1,ip-resource-id-2>"
            },
            {
              "name": "Create a kubernetes cluster with supporting Windows agent pools with AHUB enabled.",
              "text": "az aks create -g MyResourceGroup -n MyManagedCluster --load-balancer-sku Standard --network-plugin azure --windows-admin-username azure --windows-admin-password 'replacePassword1234$' --enable-ahub"
            },
            {
              "name": "Create a kubernetes cluster with userDefinedRouting, standard load balancer SKU and a custom subnet preconfigured with a route table",
              "text": "az aks create -g MyResourceGroup -n MyManagedCluster --outbound-type userDefinedRouting --load-balancer-sku standard --vnet-subnet-id customUserSubnetVnetID"
            }
          ],
          "disable-addons": [],
          "enable-addons": [
            {
              "name": "Enable ingress-appgw addon with subnet prefix.",
              "text": "az aks enable-addons --name MyManagedCluster --resource-group MyResourceGroup --addons ingress-appgw --appgw-subnet-cidr 10.2.0.0/16 --appgw-name gateway"
            },
            {
              "name": "Enable open-service-mesh addon.",
              "text": "az aks enable-addons --name MyManagedCluster --resource-group MyResourceGroup --addons open-service-mesh"
            },
            {
              "autogenerated": true,
              "name": "Enable Kubernetes addons. (autogenerated)",
              "text": "az aks enable-addons --addons virtual-node --name MyManagedCluster --resource-group MyResourceGroup --subnet-name VirtualNodeSubnet"
            }
          ],
          "get-credentials": [
            {
              "autogenerated": true,
              "name": "Get access credentials for a managed Kubernetes cluster. (autogenerated)",
              "text": "az aks get-credentials --name MyManagedCluster --resource-group MyResourceGroup"
            }
          ],
          "get-upgrades": [],
          "get-versions": [
            {
              "name": "Get the versions available for creating a managed Kubernetes cluster",
              "text": "az aks get-versions --location westus2"
            }
          ],
          "kanalyze": [],
          "kollect": [
            {
              "name": "customize the container logs to collect.",
              "text": "az aks kollect -g MyResourceGroup -n MyManagedCluster --container-logs \"mynamespace1/mypod1 myns2\""
            },
            {
              "name": "customize the kubernetes objects to collect.",
              "text": "az aks kollect -g MyResourceGroup -n MyManagedCluster --kube-objects \"mynamespace1/service myns2/deployment/deployment1\""
            },
            {
              "name": "customize the node log files to collect.",
              "text": "az aks kollect -g MyResourceGroup -n MyManagedCluster --node-logs \"/var/log/azure-vnet.log /var/log/azure-vnet-ipam.log\""
            },
            {
              "name": "using storage account name and a shared access signature token with write permission",
              "text": "az aks kollect -g MyResourceGroup -n MyManagedCluster --storage-account MyStorageAccount --sas-token \"MySasToken\""
            },
            {
              "name": "using the resource id of a storagea account resource you own.",
              "text": "az aks kollect -g MyResourceGroup -n MyManagedCluster --storage-account \"MyStoreageAccountResourceId\""
            },
            {
              "name": "using the storagea account in diagnostics settings for your managed cluster.",
              "text": "az aks kollect -g MyResourceGroup -n MyManagedCluster"
            }
          ],
          "rotate-certs": [],
          "scale": [],
          "show": [],
          "start": [],
          "stop": [],
          "update": [
            {
              "name": "Disable Azure Hybrid User Benefits featture for a kubernetes cluster.",
              "text": "az aks update -g MyResourceGroup -n MyManagedCluster --disable-ahub"
            },
            {
              "name": "Disable authorized apiserver ip ranges feature for a kubernetes cluster.",
              "text": "az aks update -g MyResourceGroup -n MyManagedCluster --api-server-authorized-ip-ranges \"\""
            },
            {
              "name": "Disable cluster-autoscaler for an existing cluster",
              "text": "az aks update --disable-cluster-autoscaler -g MyResourceGroup -n MyManagedCluster"
            },
            {
              "name": "Disable pod identity addon.",
              "text": "az aks update -g MyResourceGroup -n MyManagedCluster --disable-pod-identity"
            },
            {
              "name": "Disable pod security policy.",
              "text": "az aks update --disable-pod-security-policy -g MyResourceGroup -n MyManagedCluster"
            },
            {
              "name": "Enable Azure Hybrid User Benefits featture for a kubernetes cluster.",
              "text": "az aks update -g MyResourceGroup -n MyManagedCluster --enable-ahub"
            },
            {
              "name": "Enable cluster-autoscaler within node count range [1,5]",
              "text": "az aks update --enable-cluster-autoscaler --min-count 1 --max-count 5 -g MyResourceGroup -n MyManagedCluster"
            },
            {
              "name": "Enable pod identity addon.",
              "text": "az aks update -g MyResourceGroup -n MyManagedCluster --enable-pod-identity"
            },
            {
              "name": "Enable pod security policy.",
              "text": "az aks update --enable-pod-security-policy -g MyResourceGroup -n MyManagedCluster"
            },
            {
              "name": "Migrate a AKS AAD-Integrated cluster or a non-AAAAD cluster to a AKS-managed AAD cluster.",
              "text": "az aks update -g MyResourceGroup -n MyManagedCluster --enable-aad --aad-admin-group-object-ids <id-1,id-2> --aad-tenant-id <id>"
            },
            {
              "name": "Restrict apiserver traffic in a kubernetes cluster to agentpool nodes.",
              "text": "az aks update -g MyResourceGroup -n MyManagedCluster --api-server-authorized-ip-ranges 0.0.0.0/32"
            },
            {
              "name": "Update a AKS-managed AAD cluster with tenant ID or admin group object IDs.",
              "text": "az aks update -g MyResourceGroup -n MyManagedCluster --aad-admin-group-object-ids <id-1,id-2> --aad-tenant-id <id>"
            },
            {
              "name": "Update a kubernetes cluster with authorized apiserver ip ranges.",
              "text": "az aks update -g MyResourceGroup -n MyManagedCluster --api-server-authorized-ip-ranges 193.168.1.0/24,194.168.1.0/24"
            },
            {
              "name": "Update a kubernetes cluster with standard SKU load balancer to use the provided public IP prefixes for the load balancer outbound connection usage.",
              "text": "az aks update -g MyResourceGroup -n MyManagedCluster --load-balancer-outbound-ip-prefixes <ip-prefix-resource-id-1,ip-prefix-resource-id-2>"
            },
            {
              "name": "Update a kubernetes cluster with standard SKU load balancer to use the provided public IPs for the load balancer outbound connection usage.",
              "text": "az aks update -g MyResourceGroup -n MyManagedCluster --load-balancer-outbound-ips <ip-resource-id-1,ip-resource-id-2>"
            },
            {
              "name": "Update a kubernetes cluster with standard SKU load balancer to use two AKS created IPs for the load balancer outbound connection usage.",
              "text": "az aks update -g MyResourceGroup -n MyManagedCluster --load-balancer-managed-outbound-ip-count 2"
            },
            {
              "name": "Update a kubernetes cluster with two outbound AKS managed IPs an idle flow timeout of 5 minutes and 8000 allocated ports per machine",
              "text": "az aks update -g MyResourceGroup -n MyManagedCluster --load-balancer-managed-outbound-ip-count 2 --load-balancer-idle-timeout 5 --load-balancer-outbound-ports 8000"
            },
            {
              "name": "Update min-count or max-count for cluster autoscaler.",
              "text": "az aks update --update-cluster-autoscaler --min-count 1 --max-count 10 -g MyResourceGroup -n MyManagedCluster"
            },
            {
              "name": "Update the cluster to use system assigned managed identity in control plane.",
              "text": "az aks update -g MyResourceGroup -n MyManagedCluster --enable-managed-identity"
            },
            {
              "name": "Update the cluster to use user assigned managed identity in control plane.",
              "text": "az aks update -g MyResourceGroup -n MyManagedCluster --enable-managed-identity --assign-identity <user_assigned_identity_resource_id>"
            },
            {
              "name": "Update the tags of a kubernetes cluster",
              "text": "az aks update -g MyResourceGroup -n MyManagedCLuster --tags \"foo=bar\" \"baz=qux\""
            }
          ],
          "upgrade": [],
          "wait": []
        },
        "command-groups": {
          "nodepool": {
            "commands": {
              "add": [
                {
                  "name": "Create a nodepool in an existing AKS cluster with ephemeral os enabled.",
                  "text": "az aks nodepool add -g MyResourceGroup -n nodepool1 --cluster-name MyManagedCluster --node-osdisk-type Ephemeral --node-osdisk-size 48"
                },
                {
                  "name": "Create a nodepool with EncryptionAtHost enabled.",
                  "text": "az aks nodepool add -g MyResourceGroup -n nodepool1 --cluster-name MyManagedCluster --enable-encryption-at-host"
                }
              ],
              "delete": [],
              "get-upgrades": [
                {
                  "name": "Get the available upgrade versions for an agent pool of the managed Kubernetes cluster.",
                  "text": "az aks nodepool get-upgrades --resource-group MyResourceGroup --cluster-name MyManagedCluster --nodepool-name MyNodePool"
                }
              ],
              "list": [],
              "scale": [],
              "show": [],
              "update": [
                {
                  "name": "Change a node pool to system mode",
                  "text": "az aks nodepool update --mode System -g MyResourceGroup -n nodepool1 --cluster-name MyManagedCluster"
                },
                {
                  "name": "Disable cluster-autoscaler for an existing cluster",
                  "text": "az aks nodepool update --disable-cluster-autoscaler -g MyResourceGroup -n nodepool1 --cluster-name MyManagedCluster"
                },
                {
                  "name": "Enable cluster-autoscaler within node count range [1,5]",
                  "text": "az aks nodepool update --enable-cluster-autoscaler --min-count 1 --max-count 5 -g MyResourceGroup -n nodepool1 --cluster-name MyManagedCluster"
                },
                {
                  "name": "Update min-count or max-count for cluster autoscaler.",
                  "text": "az aks nodepool update --update-cluster-autoscaler --min-count 1 --max-count 10 -g MyResourceGroup -n nodepool1 --cluster-name MyManagedCluster"
                }
              ],
              "upgrade": []
            }
          },
          "pod-identity": {
            "commands": {
              "add": [
                {
                  "name": "Add pod identity",
                  "text": "az aks pod-identity add --cluster-name MyManagedCluster --resource-group MyResourceGroup --namespace my-namespace --name my-identity --identity-resource-id <my-identity-resource-id>"
                }
              ],
              "delete": [],
              "list": []
            },
            "command-groups": {
              "exception": {
                "commands": {
                  "add": [],
                  "delete": [],
                  "list": [],
                  "update": []
                }
              }
            }
          }
        }
      }
    }
  }
}