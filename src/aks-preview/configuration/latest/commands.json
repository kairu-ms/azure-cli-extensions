{
  "created": "2021-02-09 15:22:20.210222",
  "imports": {
    "get_three_state_action": "azure.cli.core.commands.parameters#get_three_state_action",
    "get_three_state_flag": "azure.cli.core.commands.parameters#get_three_state_flag",
    "get_enum_type": "azure.cli.core.commands.parameters#get_enum_type",
    "EnumAction": "azure.cli.core.commands.parameters#EnumAction",
    "FilesCompleter": "azure.cli.core.translator.completer#FilesCompleter",
    "file_type": "azure.cli.core.commands.parameters#file_type",
    "get_location_type": "azure.cli.core.commands.parameters#get_location_type",
    "get_resource_name_completion_list": "azure.cli.core.commands.parameters#get_resource_name_completion_list",
    "get_default_location_from_resource_group": "azure.cli.core.commands.validators#get_default_location_from_resource_group",
    "get_location_completion_list": "azure.cli.core.commands.parameters#get_location_completion_list",
    "get_location_name_type": "azure.cli.core.commands.parameters#get_location_name_type",
    "deployment_validate_table_format": "azure.cli.core.commands.arm#deployment_validate_table_format",
    "handle_template_based_exception": "azure.cli.core.commands.arm#handle_template_based_exception",
    "json_object_type": "azure.cli.core.commands.parameters#json_object_type",
    "get_resource_group_completion_list": "azure.cli.core.commands.parameters#get_resource_group_completion_list",
    "validate_tags": "azure.cli.core.commands.validators#validate_tags"
  },
  "az": {
    "command-groups": {
      "aks": {
        "full-name": "aks",
        "argument_types": {
          "acr_arg_type": {},
          "name_type": {
            "options": [
              "--name",
              "-n"
            ],
            "help": "the primary resource name"
          },
          "tags_type": {
            "help": "space-separated tags: key[=value] [key[=value] ...]. Use \"\" to clear existing tags.",
            "nargs": "*",
            "validator": "$validate_tags"
          },
          "zones_type": {
            "options": [
              "--zones",
              "-z"
            ],
            "help": "Space-separated list of availability zones into which to provision the resource.",
            "nargs": "+",
            "choices": [
              "1",
              "2",
              "3"
            ]
          }
        },
        "commands": {
          "browse": {
            "full-name": "aks browse",
            "resource-type": {
              "import_prefix": "azext_aks_preview.vendored_sdks.azure_mgmt_preview_aks",
              "client_name": "ContainerServiceClient"
            },
            "operation": ".custom#aks_browse",
            "client-factory": "._client_factory#cf_managed_clusters",
            "arguments": {
              "disable_browser": {
                "options": [
                  "--disable-browser"
                ],
                "action": "store_true"
              },
              "listen_address": {
                "options": [
                  "--listen-address"
                ],
                "default": "127.0.0.1"
              },
              "listen_port": {
                "options": [
                  "--listen-port"
                ],
                "default": "8001"
              },
              "name": {
                "arg_type": "$name_type",
                "help": "Name of the managed cluster.",
                "required": true,
                "completer": {
                  "factory": "$get_resource_name_completion_list",
                  "kwargs": {
                    "resource_type": "Microsoft.ContainerService/ManagedClusters"
                  }
                }
              },
              "resource_group_name": {
                "options": [
                  "--resource-group-name"
                ],
                "required": true
              }
            }
          },
          "create": {
            "full-name": "aks create",
            "help": "Create a new managed Kubernetes cluster.",
            "resource-type": {
              "import_prefix": "azext_aks_preview.vendored_sdks.azure_mgmt_preview_aks",
              "client_name": "ContainerServiceClient"
            },
            "operation": ".custom#aks_create",
            "client-factory": "._client_factory#cf_managed_clusters",
            "support-no-wait": true,
            "arguments": {
              "aad_admin_group_object_ids": {
                "options": [
                  "--aad-admin-group-object-ids"
                ],
                "help": "Comma seperated list of aad group object IDs that will be set as cluster admin."
              },
              "aad_client_app_id": {
                "options": [
                  "--aad-client-app-id"
                ],
                "help": "The ID of an Azure Active Directory client application of type \"Native\". This application is for user login via kubectl."
              },
              "aad_server_app_id": {
                "options": [
                  "--aad-server-app-id"
                ],
                "help": "The ID of an Azure Active Directory server application of type \"Web app/API\". This application represents the managed cluster's apiserver (Server application)."
              },
              "aad_server_app_secret": {
                "options": [
                  "--aad-server-app-secret"
                ],
                "help": "The secret of an Azure Active Directory server application."
              },
              "aad_tenant_id": {
                "options": [
                  "--aad-tenant-id"
                ],
                "help": "The ID of an Azure Active Directory tenant."
              },
              "aci_subnet_name": {
                "options": [
                  "--aci-subnet-name"
                ],
                "help": "The name of a subnet in an existing VNet into which to deploy the virtual nodes.",
                "type": "<class 'str'>"
              },
              "admin_username": {
                "options": [
                  "--admin-username",
                  "-u"
                ],
                "help": "User account to create on node VMs for SSH access.",
                "default": "azureuser"
              },
              "aks_custom_headers": {
                "options": [
                  "--aks-custom-headers"
                ],
                "help": "Send custom headers. When specified, format should be Key1=Value1,Key2=Value2"
              },
              "api_server_authorized_ip_ranges": {
                "options": [
                  "--api-server-authorized-ip-ranges"
                ],
                "help": "Comma seperated list of authorized apiserver IP ranges. Set to 0.0.0.0/32 to restrict apiserver traffic to node pools.",
                "validator": "._validators#validate_ip_ranges",
                "type": "<class 'str'>"
              },
              "appgw_id": {
                "options": [
                  "--appgw-id"
                ],
                "help": "Resource Id of an existing Application Gateway to use with AGIC. Use with ingress-azure addon.",
                "arg-group": "Application Gateway"
              },
              "appgw_name": {
                "options": [
                  "--appgw-name"
                ],
                "help": "Name of the application gateway to create/use in the node resource group. Use with ingress-azure addon.",
                "arg-group": "Application Gateway"
              },
              "appgw_subnet_cidr": {
                "options": [
                  "--appgw-subnet-cidr"
                ],
                "help": "Subnet CIDR to use for a new subnet created to deploy the Application Gateway. Use with ingress-azure addon.",
                "arg-group": "Application Gateway"
              },
              "appgw_subnet_id": {
                "options": [
                  "--appgw-subnet-id"
                ],
                "help": "Resource Id of an existing Subnet used to deploy the Application Gateway. Use with ingress-azure addon.",
                "arg-group": "Application Gateway"
              },
              "appgw_subnet_prefix": {
                "deprecate": {
                  "redirect": "--appgw-subnet-cidr",
                  "hide": true,
                  "message-template": "{object_type} '{target}' has been deprecated and will be removed in version '{expiration}'. Use '{redirect}' instead."
                },
                "options": [
                  "--appgw-subnet-prefix"
                ],
                "help": "Subnet Prefix to use for a new subnet created to deploy the Application Gateway. Use with ingress-azure addon.",
                "arg-group": "Application Gateway"
              },
              "appgw_watch_namespace": {
                "options": [
                  "--appgw-watch-namespace"
                ],
                "help": "Specify the namespace, which AGIC should watch. This could be a single string value, or a comma-separated list of namespaces.",
                "arg-group": "Application Gateway"
              },
              "assign_identity": {
                "options": [
                  "--assign-identity"
                ],
                "help": "(PREVIEW) Specify an existing user assigned identity to manage cluster resource group.",
                "validator": "._validators#validate_assign_identity",
                "type": "<class 'str'>"
              },
              "attach_acr": {
                "arg_type": "$acr_arg_type",
                "options": [
                  "--attach-acr"
                ],
                "help": "Grant the 'acrpull' role assignment to the ACR specified by name or resource ID."
              },
              "auto_upgrade_channel": {
                "arg_type": {
                  "factory": "$get_enum_type",
                  "kwargs": {
                    "data": [
                      "rapid",
                      "stable",
                      "patch",
                      "none"
                    ]
                  }
                },
                "options": [
                  "--auto-upgrade-channel"
                ],
                "help": "Specify the upgrade channel for autoupgrade. It could be rapid, stable, patch or none, none means disable autoupgrade.",
                "choices": [
                  "rapid",
                  "stable",
                  "patch",
                  "none"
                ],
                "action": "$EnumAction"
              },
              "client_secret": {
                "options": [
                  "--client-secret"
                ],
                "help": "Secret associated with the service principal. This argument is required if `--service-principal` is specified."
              },
              "cluster_autoscaler_profile": {
                "options": [
                  "--cluster-autoscaler-profile"
                ],
                "help": "Space-separated list of key=value pairs for configuring cluster autoscaler. Pass an empty string to clear the profile.",
                "nargs": "+",
                "validator": "._validators#validate_cluster_autoscaler_profile"
              },
              "disable_rbac": {
                "options": [
                  "--disable-rbac"
                ],
                "help": "Disable Kubernetes Role-Based Access Control.",
                "action": "store_true"
              },
              "disable_sgxquotehelper": {
                "options": [
                  "--disable-sgxquotehelper"
                ],
                "help": "Disable SGX quote helper for confcom addon.",
                "action": "store_true"
              },
              "dns_name_prefix": {
                "options": [
                  "--dns-name-prefix",
                  "-p"
                ],
                "help": "Prefix for hostnames that are created. If not specified, generate a hostname using the managed cluster and resource group names."
              },
              "dns_service_ip": {
                "options": [
                  "--dns-service-ip"
                ],
                "help": {
                  "short-summary": "An IP address assigned to the Kubernetes DNS service.",
                  "long-summary": [
                    "This address must be within the Kubernetes service address range specified by \"--service-cidr\". For example, 10.0.0.10."
                  ]
                }
              },
              "docker_bridge_address": {
                "options": [
                  "--docker-bridge-address"
                ],
                "help": {
                  "short-summary": "A specific IP address and netmask for the Docker bridge, using standard CIDR notation.",
                  "long-summary": [
                    "This address must not be in any Subnet IP ranges, or the Kubernetes service address range. For example, 172.17.0.1/16."
                  ]
                }
              },
              "enable_aad": {
                "options": [
                  "--enable-aad"
                ],
                "help": "Enable managed AAD feature for cluster.",
                "action": "store_true"
              },
              "enable_addons": {
                "options": [
                  "--enable-addons",
                  "-a"
                ],
                "help": {
                  "short-summary": "Enable the Kubernetes addons in a comma-separated list.",
                  "long-summary": [
                    "These addons are available:",
                    "    http_application_routing  - configure ingress with automatic public DNS name creation.",
                    "    monitoring                - turn on Log Analytics monitoring. Uses the Log Analytics Default Workspace if it exists, else creates one. Specify \"--workspace-resource-id\" to use an existing workspace.",
                    "                                If monitoring addon is enabled --no-wait argument will have no effect",
                    "    virtual-node              - enable AKS Virtual Node. Requires --aci-subnet-name to provide the name of an existing subnet for the Virtual Node to use.",
                    "                                aci-subnet-name must be in the same vnet which is specified by --vnet-subnet-id (required as well).",
                    "    azure-policy              - enable Azure policy. The Azure Policy add-on for AKS enables at-scale enforcements and safeguards on your clusters in a centralized, consistent manner.",
                    "                                Learn more at aka.ms/aks/policy.",
                    "    ingress-appgw             - enable Application Gateway Ingress Controller addon (PREVIEW).",
                    "    confcom                   - enable confcom addon, this will enable SGX device plugin and quote helper by default(PREVIEW).",
                    "    open-service-mesh         - enable Open Service Mesh addon (PREVIEW).",
                    "    gitops                    - enable GitOps (PREVIEW)."
                  ]
                },
                "validator": "._validators#validate_addons"
              },
              "enable_ahub": {
                "options": [
                  "--enable-ahub"
                ],
                "help": "Enable Azure Hybrid User Benefits (AHUB) for Windows VMs.",
                "action": "store_true"
              },
              "enable_azure_rbac": {
                "options": [
                  "--enable-azure-rbac"
                ],
                "help": "Whether to enable Azure RBAC for Kubernetes authorization.",
                "action": "store_true"
              },
              "enable_cluster_autoscaler": {
                "options": [
                  "--enable-cluster-autoscaler"
                ],
                "help": {
                  "short-summary": "Enable cluster autoscaler, default value is false.",
                  "long-summary": [
                    "If specified, please make sure the kubernetes version is larger than 1.10.6."
                  ]
                },
                "action": "store_true"
              },
              "enable_encryption_at_host": {
                "arg_type": {
                  "factory": "$get_three_state_flag",
                  "kwargs": {}
                },
                "options": [
                  "--enable-encryption-at-host"
                ],
                "help": "Enable EncryptionAtHost on agent node pool.",
                "nargs": "?",
                "choices": [
                  "true",
                  "false"
                ],
                "action": {
                  "factory": "$get_three_state_action",
                  "kwargs": {
                    "invert": false,
                    "negative_label": "false",
                    "positive_label": "true",
                    "return_label": false
                  }
                }
              },
              "enable_managed_identity": {
                "options": [
                  "--enable-managed-identity"
                ],
                "help": "Using managed identity to manage cluster resource group. Default value is true, you can explicitly specify \"--client-id\" and \"--secret\" to disable managed identity.",
                "default": true,
                "action": "store_true"
              },
              "enable_node_public_ip": {
                "preview": true,
                "options": [
                  "--enable-node-public-ip"
                ],
                "help": "Enable VMSS node public IP.",
                "action": "store_true"
              },
              "enable_pod_identity": {
                "options": [
                  "--enable-pod-identity"
                ],
                "help": "(PREVIEW) Enable pod identity addon.",
                "action": "store_true"
              },
              "enable_pod_security_policy": {
                "options": [
                  "--enable-pod-security-policy"
                ],
                "help": "(PREVIEW) Enable pod security policy.",
                "action": "store_true"
              },
              "enable_private_cluster": {
                "options": [
                  "--enable-private-cluster"
                ],
                "help": "Enable private cluster.",
                "action": "store_true"
              },
              "enable_rbac": {
                "deprecate": {
                  "redirect": "--disable-rbac",
                  "hide-since": "2.0.45",
                  "message-template": "{object_type} '{target}' has been deprecated and will be removed in version '{expiration}'. Use '{redirect}' instead."
                },
                "options": [
                  "--enable-rbac",
                  "-r"
                ],
                "help": "Enable Kubernetes Role-Based Access Control. Default: enabled.",
                "action": "store_true"
              },
              "enable_vmss": {
                "options": [
                  "--enable-vmss"
                ],
                "help": "To be deprecated. Use vm_set_type instead.",
                "action": "store_true"
              },
              "generate_ssh_keys": {
                "options": [
                  "--generate-ssh-keys"
                ],
                "help": "Generate SSH public and private key files if missing.",
                "action": "store_true",
                "validator": "._validators#validate_create_parameters"
              },
              "kubelet_config": {
                "options": [
                  "--kubelet-config"
                ],
                "help": "Kubelet configurations for agent nodes.",
                "type": "<class 'str'>"
              },
              "kubernetes_version": {
                "options": [
                  "--kubernetes-version",
                  "-k"
                ],
                "help": {
                  "short-summary": "Version of Kubernetes to use for creating the cluster, such as \"1.7.12\" or \"1.8.7\".",
                  "populator-commands": [
                    "az aks get-versions"
                  ]
                },
                "validator": "._validators#validate_k8s_version",
                "completer": "._completers#get_k8s_versions_completion_list"
              },
              "linux_os_config": {
                "options": [
                  "--linux-os-config"
                ],
                "help": "OS configurations for Linux agent nodes.",
                "type": "<class 'str'>"
              },
              "load_balancer_idle_timeout": {
                "options": [
                  "--load-balancer-idle-timeout"
                ],
                "help": {
                  "short-summary": "Load balancer idle timeout in minutes.",
                  "long-summary": [
                    "Desired idle timeout for load balancer outbound flows, default is 30 minutes. Please specify a value in the range of [4, 100]."
                  ]
                },
                "validator": "._validators#validate_load_balancer_idle_timeout",
                "type": "<class 'int'>"
              },
              "load_balancer_managed_outbound_ip_count": {
                "options": [
                  "--load-balancer-managed-outbound-ip-count"
                ],
                "help": {
                  "short-summary": "Load balancer managed outbound IP count.",
                  "long-summary": [
                    "Desired number of managed outbound IPs for load balancer outbound connection. Valid for Standard SKU load balancer cluster only."
                  ]
                },
                "type": "<class 'int'>"
              },
              "load_balancer_outbound_ip_prefixes": {
                "options": [
                  "--load-balancer-outbound-ip-prefixes"
                ],
                "help": {
                  "short-summary": "Load balancer outbound IP prefix resource IDs.",
                  "long-summary": [
                    "Comma-separated public IP prefix resource IDs for load balancer outbound connection. Valid for Standard SKU load balancer cluster only."
                  ]
                },
                "validator": "._validators#validate_load_balancer_outbound_ip_prefixes",
                "type": "<class 'str'>"
              },
              "load_balancer_outbound_ips": {
                "options": [
                  "--load-balancer-outbound-ips"
                ],
                "help": {
                  "short-summary": "Load balancer outbound IP resource IDs.",
                  "long-summary": [
                    "Comma-separated public IP resource IDs for load balancer outbound connection. Valid for Standard SKU load balancer cluster only."
                  ]
                },
                "validator": "._validators#validate_load_balancer_outbound_ips",
                "type": "<class 'str'>"
              },
              "load_balancer_outbound_ports": {
                "options": [
                  "--load-balancer-outbound-ports"
                ],
                "help": {
                  "short-summary": "Load balancer outbound allocated ports.",
                  "long-summary": [
                    "Desired static number of outbound ports per VM in the load balancer backend pool. By default, set to 0 which uses the default allocation based on the number of VMs. Please specify a value in the range of [0, 64000] that is a multiple of 8."
                  ]
                },
                "validator": "._validators#validate_load_balancer_outbound_ports",
                "type": "<class 'int'>"
              },
              "load_balancer_sku": {
                "options": [
                  "--load-balancer-sku"
                ],
                "help": {
                  "short-summary": "Azure Load Balancer SKU selection for your cluster. basic or standard.",
                  "long-summary": [
                    "Select between Basic or Standard Azure Load Balancer SKU for your AKS cluster."
                  ]
                },
                "validator": "._validators#validate_load_balancer_sku",
                "type": "<class 'str'>"
              },
              "location": {
                "options": [
                  "--location"
                ]
              },
              "max_count": {
                "options": [
                  "--max-count"
                ],
                "help": "Maximum nodes count used for autoscaler, when \"--enable-cluster-autoscaler\" specified. Please specify the value in the range of [1, 100].",
                "validator": "._validators#validate_nodes_count",
                "type": "<class 'int'>"
              },
              "max_pods": {
                "options": [
                  "--max-pods",
                  "-m"
                ],
                "help": {
                  "short-summary": "The maximum number of pods deployable to a node.",
                  "long-summary": [
                    "If not specified, defaults to 110, or 30 for advanced networking configurations."
                  ]
                },
                "type": "<class 'int'>"
              },
              "min_count": {
                "options": [
                  "--min-count"
                ],
                "help": "Minimun nodes count used for autoscaler, when \"--enable-cluster-autoscaler\" specified. Please specify the value in the range of [1, 100].",
                "validator": "._validators#validate_nodes_count",
                "type": "<class 'int'>"
              },
              "name": {
                "arg_type": "$name_type",
                "help": "Name of the managed cluster.",
                "required": true,
                "validator": "._validators#validate_linux_host_name",
                "completer": {
                  "factory": "$get_resource_name_completion_list",
                  "kwargs": {
                    "resource_type": "Microsoft.ContainerService/ManagedClusters"
                  }
                }
              },
              "network_plugin": {
                "arg_type": {
                  "factory": "$get_enum_type",
                  "kwargs": {
                    "data": [
                      "azure",
                      "kubenet"
                    ]
                  }
                },
                "options": [
                  "--network-plugin"
                ],
                "help": {
                  "short-summary": "The Kubernetes network plugin to use.",
                  "long-summary": [
                    "Specify \"azure\" for advanced networking configurations. Defaults to \"kubenet\"."
                  ]
                },
                "choices": [
                  "azure",
                  "kubenet"
                ],
                "action": "$EnumAction"
              },
              "network_policy": {
                "options": [
                  "--network-policy"
                ],
                "help": {
                  "short-summary": "(PREVIEW) The Kubernetes network policy to use.",
                  "long-summary": [
                    "Using together with \"azure\" network plugin.",
                    "Specify \"azure\" for Azure network policy manager and \"calico\" for calico network policy controller.",
                    "Defaults to \"\" (network policy disabled)."
                  ]
                }
              },
              "no_ssh_key": {
                "options": [
                  "--no-ssh-key",
                  "-x"
                ],
                "help": {
                  "short-summary": "Do not use or create a local SSH key.",
                  "long-summary": [
                    "To access nodes after creating a cluster with this option, use the Azure Portal."
                  ]
                },
                "action": "store_true"
              },
              "node_count": {
                "options": [
                  "--node-count",
                  "-c"
                ],
                "help": "Number of nodes in the Kubernetes node pool. It is required when --enable-cluster-autoscaler specified. After creating a cluster, you can change the size of its node pool with `az aks scale`.",
                "default": 3,
                "type": "<class 'int'>"
              },
              "node_osdisk_diskencryptionset_id": {
                "options": [
                  "--node-osdisk-diskencryptionset-id"
                ],
                "help": "ResourceId of the disk encryption set to use for enabling encryption at rest."
              },
              "node_osdisk_size": {
                "options": [
                  "--node-osdisk-size"
                ],
                "help": "Size in GB of the OS disk for each node in the node pool. Minimum 30 GB."
              },
              "node_osdisk_type": {
                "options": [
                  "--node-osdisk-type"
                ],
                "help": "OS disk type to be used for machines in a given agent pool. Defaults to 'Managed'. May not be changed for this pool after creation."
              },
              "node_resource_group": {
                "options": [
                  "--node-resource-group"
                ],
                "help": "The node resource group is the resource group where all customer's resources will be created in, such as virtual machines."
              },
              "node_vm_size": {
                "options": [
                  "--node-vm-size",
                  "-s"
                ],
                "help": "Size of Virtual Machines to create as Kubernetes nodes.",
                "default": "Standard_DS2_v2",
                "completer": "._completers#get_vm_size_completion_list"
              },
              "node_zones": {
                "arg_type": "$zones_type",
                "options": [
                  "--node-zones",
                  "--zones",
                  "-z"
                ],
                "help": "(--node-zones will be deprecated, use --zones) Space-separated list of availability zones where agent nodes will be placed."
              },
              "nodepool_labels": {
                "options": [
                  "--nodepool-labels"
                ],
                "help": "space-separated labels: key[=value] [key[=value] ...]. You can not change the node labels through CLI after creation. See https://aka.ms/node-labels for syntax of labels.",
                "nargs": "*",
                "validator": "._validators#validate_nodepool_labels"
              },
              "nodepool_name": {
                "options": [
                  "--nodepool-name"
                ],
                "help": "Node pool name, upto 12 alphanumeric characters",
                "default": "nodepool1",
                "validator": "._validators#validate_nodepool_name",
                "type": "<class 'str'>"
              },
              "nodepool_tags": {
                "options": [
                  "--nodepool-tags"
                ],
                "help": "space-separated tags: key[=value] [key[=value] ...]. Use \"\" to clear existing tags.",
                "nargs": "*",
                "validator": "._validators#validate_nodepool_tags"
              },
              "outbound_type": {
                "arg_type": {
                  "factory": "$get_enum_type",
                  "kwargs": {
                    "data": [
                      "loadBalancer",
                      "userDefinedRouting"
                    ]
                  }
                },
                "options": [
                  "--outbound-type"
                ],
                "help": {
                  "short-summary": "How outbound traffic will be configured for a cluster.",
                  "long-summary": [
                    "Select between loadBalancer and userDefinedRouting. If not set, defaults to type loadBalancer. Requires --vnet-subnet-id to be provided with a preconfigured route table and --load-balancer-sku to be Standard."
                  ]
                },
                "choices": [
                  "loadBalancer",
                  "userDefinedRouting"
                ],
                "action": "$EnumAction"
              },
              "pod_cidr": {
                "options": [
                  "--pod-cidr"
                ],
                "help": {
                  "short-summary": "A CIDR notation IP range from which to assign pod IPs when kubenet is used.",
                  "long-summary": [
                    "This range must not overlap with any Subnet IP ranges. For example, 172.244.0.0/16."
                  ]
                }
              },
              "pod_subnet_id": {
                "options": [
                  "--pod-subnet-id"
                ],
                "help": "The ID of a subnet in an existing VNet into which to assign pods in the cluster (requires azure network-plugin)",
                "validator": "._validators#validate_pod_subnet_id",
                "type": "<class 'str'>"
              },
              "ppg": {
                "options": [
                  "--ppg"
                ],
                "help": "The ID of a PPG."
              },
              "private_dns_zone": {
                "options": [
                  "--private-dns-zone"
                ],
                "help": {
                  "short-summary": "(PREVIEW) private dns zone mode for private cluster.",
                  "long-summary": [
                    "Allowed values are \"system\", \"none\" or your custom private dns zone resource id. If not set, defaults to type system. Requires --enable-private-cluster to be used."
                  ]
                }
              },
              "resource_group_name": {
                "options": [
                  "--resource-group-name"
                ],
                "required": true
              },
              "service_cidr": {
                "options": [
                  "--service-cidr"
                ],
                "help": {
                  "short-summary": "A CIDR notation IP range from which to assign service cluster IPs.",
                  "long-summary": [
                    "This range must not overlap with any Subnet IP ranges. For example, 10.0.0.0/16."
                  ]
                }
              },
              "service_principal": {
                "options": [
                  "--service-principal"
                ],
                "help": {
                  "short-summary": "Service principal used for authentication to Azure APIs.",
                  "long-summary": [
                    "If not specified, a new service principal is created and cached at $HOME\\.azure\\aksServicePrincipal.json to be used by subsequent `az aks` commands."
                  ]
                }
              },
              "skip_subnet_role_assignment": {
                "options": [
                  "--skip-subnet-role-assignment"
                ],
                "help": {
                  "short-summary": "Skip role assignment for subnet (advanced networking).",
                  "long-summary": [
                    "If specified, please make sure your service principal has the access to your subnet."
                  ]
                },
                "action": "store_true"
              },
              "ssh_key_value": {
                "options": [
                  "--ssh-key-value"
                ],
                "help": "Public key path or key contents to install on node VMs for SSH access. For example, 'ssh-rsa AAAAB...snip...UcyupgH azureuser@linuxvm'.",
                "default": "~\\.ssh\\id_rsa.pub",
                "validator": "._validators#validate_ssh_key",
                "completer": {
                  "factory": "$FilesCompleter",
                  "kwargs": {}
                },
                "type": "$file_type"
              },
              "tags": {
                "arg_type": "$tags_type",
                "options": [
                  "--tags"
                ],
                "help": "The tags of the managed cluster. The managed cluster instance and all resources managed by the cloud provider will be tagged."
              },
              "uptime_sla": {
                "options": [
                  "--uptime-sla"
                ],
                "help": "Enable a paid managed cluster service with a financially backed SLA.",
                "action": "store_true"
              },
              "vm_set_type": {
                "options": [
                  "--vm-set-type"
                ],
                "help": "Agent pool vm set type. VirtualMachineScaleSets or AvailabilitySet.",
                "validator": "._validators#validate_vm_set_type",
                "type": "<class 'str'>"
              },
              "vnet_subnet_id": {
                "options": [
                  "--vnet-subnet-id"
                ],
                "help": "The ID of a subnet in an existing VNet into which to deploy the cluster.",
                "validator": "._validators#validate_vnet_subnet_id",
                "type": "<class 'str'>"
              },
              "windows_admin_password": {
                "options": [
                  "--windows-admin-password"
                ],
                "help": {
                  "short-summary": "User account password to use on windows node VMs.",
                  "long-summary": [
                    "Rules for windows-admin-password:",
                    "    - Minimum-length: 8 characters",
                    "    - Max-length: 123 characters",
                    "    - Complexity requirements: 3 out of 4 conditions below need to be fulfilled",
                    "      * Has lower characters",
                    "      * Has upper characters",
                    "      * Has a digit",
                    "      * Has a special character (Regex match [\\W_])",
                    "    - Disallowed values:  \"abc@123\", \"P@$$w0rd\", \"P@ssw0rd\", \"P@ssword123\", \"Pa$$word\", \"pass@word1\", \"Password!\", \"Password1\", \"Password22\", \"iloveyou!\"",
                    "Reference: https://docs.microsoft.com/en-us/dotnet/api/microsoft.azure.management.compute.models.virtualmachinescalesetosprofile.adminpassword?view=azure-dotnet"
                  ]
                }
              },
              "windows_admin_username": {
                "options": [
                  "--windows-admin-username"
                ],
                "help": {
                  "short-summary": "User account to create on windows node VMs.",
                  "long-summary": [
                    "Rules for windows-admin-username:",
                    "    - restriction: Cannot end in \".\"",
                    "    - Disallowed values: \"administrator\", \"admin\", \"user\", \"user1\", \"test\", \"user2\", \"test1\", \"user3\", \"admin1\", \"1\", \"123\", \"a\", \"actuser\", \"adm\", \"admin2\", \"aspnet\", \"backup\", \"console\", \"david\", \"guest\", \"john\", \"owner\", \"root\", \"server\", \"sql\", \"support\", \"support_388945a0\", \"sys\", \"test2\", \"test3\", \"user4\", \"user5\".",
                    "    - Minimum-length: 1 character",
                    "    - Max-length: 20 characters",
                    "Reference: https://docs.microsoft.com/en-us/dotnet/api/microsoft.azure.management.compute.models.virtualmachinescalesetosprofile.adminusername?view=azure-dotnet"
                  ]
                }
              },
              "workspace_resource_id": {
                "options": [
                  "--workspace-resource-id"
                ],
                "help": "The resource ID of an existing Log Analytics Workspace to use for storing monitoring data. If not specified, uses the default Log Analytics Workspace if it exists, otherwise creates one."
              },
              "yes": {
                "options": [
                  "--yes",
                  "-y"
                ],
                "help": "Do not prompt for confirmation.",
                "action": "store_true"
              }
            }
          },
          "disable-addons": {
            "full-name": "aks disable-addons",
            "resource-type": {
              "import_prefix": "azext_aks_preview.vendored_sdks.azure_mgmt_preview_aks",
              "client_name": "ContainerServiceClient"
            },
            "operation": ".custom#aks_disable_addons",
            "client-factory": "._client_factory#cf_managed_clusters",
            "support-no-wait": true,
            "arguments": {
              "addons": {
                "options": [
                  "--addons",
                  "-a"
                ],
                "required": true,
                "validator": "._validators#validate_addons"
              },
              "name": {
                "arg_type": "$name_type",
                "help": "Name of the managed cluster.",
                "required": true,
                "completer": {
                  "factory": "$get_resource_name_completion_list",
                  "kwargs": {
                    "resource_type": "Microsoft.ContainerService/ManagedClusters"
                  }
                }
              },
              "resource_group_name": {
                "options": [
                  "--resource-group-name"
                ],
                "required": true
              }
            }
          },
          "enable-addons": {
            "full-name": "aks enable-addons",
            "help": {
              "short-summary": "Enable Kubernetes addons.",
              "long-summary": [
                "These addons are available:",
                "    http_application_routing  - configure ingress with automatic public DNS name creation.",
                "    monitoring                - turn on Log Analytics monitoring. Uses the Log Analytics Default Workspace if it exists, else creates one. Specify \"--workspace-resource-id\" to use an existing workspace.",
                "                                If monitoring addon is enabled --no-wait argument will have no effect",
                "    virtual-node              - enable AKS Virtual Node. Requires --subnet-name to provide the name of an existing subnet for the Virtual Node to use.",
                "    azure-policy              - enable Azure policy. The Azure Policy add-on for AKS enables at-scale enforcements and safeguards on your clusters in a centralized, consistent manner.",
                "                                Learn more at aka.ms/aks/policy.",
                "    ingress-appgw             - enable Application Gateway Ingress Controller addon (PREVIEW).",
                "    open-service-mesh         - enable Open Service Mesh addon (PREVIEW).",
                "    gitops                    - Enable GitOps (PREVIEW)."
              ]
            },
            "resource-type": {
              "import_prefix": "azext_aks_preview.vendored_sdks.azure_mgmt_preview_aks",
              "client_name": "ContainerServiceClient"
            },
            "operation": ".custom#aks_enable_addons",
            "client-factory": "._client_factory#cf_managed_clusters",
            "support-no-wait": true,
            "arguments": {
              "addons": {
                "options": [
                  "--addons",
                  "-a"
                ],
                "help": "Enable the Kubernetes addons in a comma-separated list.",
                "required": true,
                "validator": "._validators#validate_addons"
              },
              "appgw_id": {
                "options": [
                  "--appgw-id"
                ],
                "help": "Resource Id of an existing Application Gateway to use with AGIC. Use with ingress-azure addon.",
                "arg-group": "Application Gateway"
              },
              "appgw_name": {
                "options": [
                  "--appgw-name"
                ],
                "help": "Name of the application gateway to create/use in the node resource group. Use with ingress-azure addon.",
                "arg-group": "Application Gateway"
              },
              "appgw_subnet_cidr": {
                "options": [
                  "--appgw-subnet-cidr"
                ],
                "help": "Subnet CIDR to use for a new subnet created to deploy the Application Gateway. Use with ingress-azure addon.",
                "arg-group": "Application Gateway"
              },
              "appgw_subnet_id": {
                "options": [
                  "--appgw-subnet-id"
                ],
                "help": "Resource Id of an existing Subnet used to deploy the Application Gateway. Use with ingress-azure addon.",
                "arg-group": "Application Gateway"
              },
              "appgw_subnet_prefix": {
                "deprecate": {
                  "redirect": "--appgw-subnet-cidr",
                  "hide": true,
                  "message-template": "{object_type} '{target}' has been deprecated and will be removed in version '{expiration}'. Use '{redirect}' instead."
                },
                "options": [
                  "--appgw-subnet-prefix"
                ],
                "help": "Subnet Prefix to use for a new subnet created to deploy the Application Gateway. Use with ingress-azure addon.",
                "arg-group": "Application Gateway"
              },
              "appgw_watch_namespace": {
                "options": [
                  "--appgw-watch-namespace"
                ],
                "help": "Specify the namespace, which AGIC should watch. This could be a single string value, or a comma-separated list of namespaces. Use with ingress-azure addon.",
                "arg-group": "Application Gateway"
              },
              "disable_sgxquotehelper": {
                "options": [
                  "--disable-sgxquotehelper"
                ],
                "help": "Disable SGX quote helper for confcom addon.",
                "action": "store_true"
              },
              "name": {
                "arg_type": "$name_type",
                "help": "Name of the managed cluster.",
                "required": true,
                "completer": {
                  "factory": "$get_resource_name_completion_list",
                  "kwargs": {
                    "resource_type": "Microsoft.ContainerService/ManagedClusters"
                  }
                }
              },
              "resource_group_name": {
                "options": [
                  "--resource-group-name"
                ],
                "required": true
              },
              "subnet_name": {
                "options": [
                  "--subnet-name",
                  "-s"
                ],
                "help": "The subnet name for the virtual node to use."
              },
              "workspace_resource_id": {
                "options": [
                  "--workspace-resource-id"
                ],
                "help": "The resource ID of an existing Log Analytics Workspace to use for storing monitoring data."
              }
            }
          },
          "get-credentials": {
            "full-name": "aks get-credentials",
            "help": "Get access credentials for a managed Kubernetes cluster.",
            "resource-type": {
              "import_prefix": "azext_aks_preview.vendored_sdks.azure_mgmt_preview_aks",
              "client_name": "ContainerServiceClient"
            },
            "operation": ".custom#aks_get_credentials",
            "client-factory": "._client_factory#cf_managed_clusters",
            "arguments": {
              "admin": {
                "options": [
                  "--admin",
                  "-a"
                ],
                "help": "Get cluster administrator credentials.  Default: cluster user credentials.",
                "action": "store_true"
              },
              "context_name": {
                "options": [
                  "--context"
                ],
                "help": "If specified, overwrite the default context name."
              },
              "name": {
                "arg_type": "$name_type",
                "help": "Name of the managed cluster.",
                "required": true,
                "completer": {
                  "factory": "$get_resource_name_completion_list",
                  "kwargs": {
                    "resource_type": "Microsoft.ContainerService/ManagedClusters"
                  }
                }
              },
              "overwrite_existing": {
                "options": [
                  "--overwrite-existing"
                ],
                "help": "Overwrite any existing cluster entry with the same name.",
                "action": "store_true"
              },
              "path": {
                "options": [
                  "--file",
                  "-f"
                ],
                "help": "Kubernetes configuration file to update. Use \"-\" to print YAML to stdout instead.",
                "default": "C:\\Users\\kairu\\.kube\\config",
                "completer": {
                  "factory": "$FilesCompleter",
                  "kwargs": {}
                },
                "type": "$file_type"
              },
              "resource_group_name": {
                "options": [
                  "--resource-group-name"
                ],
                "required": true
              },
              "user": {
                "options": [
                  "--user",
                  "-u"
                ],
                "help": "Get credentials for the user. Only valid when --admin is False.  Default: cluster user credentials.",
                "default": "clusterUser",
                "validator": "._validators#validate_user"
              }
            }
          },
          "get-upgrades": {
            "full-name": "aks get-upgrades",
            "help": {
              "short-summary": "Gets upgrade profile for a managed cluster",
              "long-summary": [
                "Gets the details of the upgrade profile for a managed cluster with a specified resource group and name."
              ]
            },
            "resource-type": {
              "import_prefix": "azext_aks_preview.vendored_sdks.azure_mgmt_preview_aks",
              "client_name": "ContainerServiceClient"
            },
            "operation": ".vendored_sdks.azure_mgmt_preview_aks.operations._managed_clusters_operations#ManagedClustersOperations.get_upgrade_profile",
            "client-factory": "._client_factory#cf_managed_clusters",
            "table-transformer": "._format#aks_upgrades_table_format",
            "arguments": {
              "resource_group_name": {
                "options": [
                  "--resource-group-name"
                ],
                "help": "The name of the resource group.",
                "required": true
              },
              "resource_name": {
                "arg_type": "$name_type",
                "help": "Name of the managed cluster.",
                "required": true,
                "completer": {
                  "factory": "$get_resource_name_completion_list",
                  "kwargs": {
                    "resource_type": "Microsoft.ContainerService/ManagedClusters"
                  }
                }
              }
            }
          },
          "get-versions": {
            "full-name": "aks get-versions",
            "help": "Get the versions available for creating a managed Kubernetes cluster.",
            "resource-type": {
              "import_prefix": "azext_aks_preview.vendored_sdks.azure_mgmt_preview_aks",
              "client_name": "ContainerServiceClient"
            },
            "operation": ".custom#aks_get_versions",
            "client-factory": "._client_factory#cf_container_services",
            "table-transformer": "._format#aks_versions_table_format",
            "arguments": {
              "location": {
                "options": [
                  "--location"
                ],
                "required": true
              }
            }
          },
          "kanalyze": {
            "full-name": "aks kanalyze",
            "help": "Display diagnostic results for the Kubernetes cluster after kollect is done.",
            "resource-type": {
              "import_prefix": "azext_aks_preview.vendored_sdks.azure_mgmt_preview_aks",
              "client_name": "ContainerServiceClient"
            },
            "operation": ".custom#aks_kanalyze",
            "client-factory": "._client_factory#cf_managed_clusters",
            "arguments": {
              "name": {
                "arg_type": "$name_type",
                "help": "Name of the managed cluster.",
                "required": true,
                "completer": {
                  "factory": "$get_resource_name_completion_list",
                  "kwargs": {
                    "resource_type": "Microsoft.ContainerService/ManagedClusters"
                  }
                }
              },
              "resource_group_name": {
                "options": [
                  "--resource-group-name"
                ],
                "required": true
              }
            }
          },
          "kollect": {
            "full-name": "aks kollect",
            "help": {
              "short-summary": "Collecting diagnostic information for the Kubernetes cluster.",
              "long-summary": [
                "Collect diagnostic information for the Kubernetes cluster and store it in the specified storage account.",
                "You can provide the storage account in three ways:",
                "  storage account name and a shared access signature with write permission.",
                "  resource Id to a storage account you own.",
                "  the storagea account in diagnostics settings for your managed cluster."
              ]
            },
            "resource-type": {
              "import_prefix": "azext_aks_preview.vendored_sdks.azure_mgmt_preview_aks",
              "client_name": "ContainerServiceClient"
            },
            "operation": ".custom#aks_kollect",
            "client-factory": "._client_factory#cf_managed_clusters",
            "arguments": {
              "container_logs": {
                "options": [
                  "--container-logs"
                ],
                "help": {
                  "short-summary": "The list of container logs to collect.",
                  "long-summary": [
                    "The list of container logs to collect. Its value can be either all containers",
                    "in a namespace, for example, kube-system, or a specific container in a",
                    "namespace, for example, kube-system/tunnelfront."
                  ]
                }
              },
              "kube_objects": {
                "options": [
                  "--kube-objects"
                ],
                "help": {
                  "short-summary": "The list of kubernetes objects to describe.",
                  "long-summary": [
                    "The list of kubernetes objects to describe. Its value can be either all objects of a type",
                    "in a namespace, for example, kube-system/pod, or a specific object of a type in a namespace,",
                    "for example, kube-system/deployment/tunnelfront."
                  ]
                }
              },
              "name": {
                "arg_type": "$name_type",
                "help": "Name of the managed cluster.",
                "required": true,
                "completer": {
                  "factory": "$get_resource_name_completion_list",
                  "kwargs": {
                    "resource_type": "Microsoft.ContainerService/ManagedClusters"
                  }
                }
              },
              "node_logs": {
                "options": [
                  "--node-logs"
                ],
                "help": "The list of node logs to collect. For example, /var/log/cloud-init.log"
              },
              "resource_group_name": {
                "options": [
                  "--resource-group-name"
                ],
                "required": true
              },
              "sas_token": {
                "options": [
                  "--sas-token"
                ],
                "help": "The SAS token with writable permission for the storage account."
              },
              "storage_account": {
                "options": [
                  "--storage-account"
                ],
                "help": "Name or ID of the storage account to save the diagnostic information."
              }
            }
          },
          "rotate-certs": {
            "full-name": "aks rotate-certs",
            "help": {
              "short-summary": "Rotate certificates and keys on a managed Kubernetes cluster",
              "long-summary": [
                "Kubernetes will be unavailable during cluster certificate rotation."
              ]
            },
            "resource-type": {
              "import_prefix": "azext_aks_preview.vendored_sdks.azure_mgmt_preview_aks",
              "client_name": "ContainerServiceClient"
            },
            "operation": ".custom#aks_rotate_certs",
            "client-factory": "._client_factory#cf_managed_clusters",
            "confirmation": "Kubernetes will be unavailable during certificate rotation process.\nAre you sure you want to perform this operation?",
            "support-no-wait": true,
            "arguments": {
              "name": {
                "arg_type": "$name_type",
                "help": "Name of the managed cluster.",
                "required": true,
                "completer": {
                  "factory": "$get_resource_name_completion_list",
                  "kwargs": {
                    "resource_type": "Microsoft.ContainerService/ManagedClusters"
                  }
                }
              },
              "resource_group_name": {
                "options": [
                  "--resource-group-name"
                ],
                "required": true
              }
            }
          },
          "scale": {
            "full-name": "aks scale",
            "help": "Scale the node pool in a managed Kubernetes cluster.",
            "resource-type": {
              "import_prefix": "azext_aks_preview.vendored_sdks.azure_mgmt_preview_aks",
              "client_name": "ContainerServiceClient"
            },
            "operation": ".custom#aks_scale",
            "client-factory": "._client_factory#cf_managed_clusters",
            "support-no-wait": true,
            "arguments": {
              "name": {
                "arg_type": "$name_type",
                "help": "Name of the managed cluster.",
                "required": true,
                "completer": {
                  "factory": "$get_resource_name_completion_list",
                  "kwargs": {
                    "resource_type": "Microsoft.ContainerService/ManagedClusters"
                  }
                }
              },
              "node_count": {
                "options": [
                  "--node-count",
                  "-c"
                ],
                "help": "Number of nodes in the Kubernetes node pool.",
                "required": true,
                "type": "<class 'int'>"
              },
              "nodepool_name": {
                "options": [
                  "--nodepool-name"
                ],
                "help": "Node pool name, upto 12 alphanumeric characters",
                "validator": "._validators#validate_nodepool_name",
                "type": "<class 'str'>"
              },
              "resource_group_name": {
                "options": [
                  "--resource-group-name"
                ],
                "required": true
              }
            }
          },
          "show": {
            "full-name": "aks show",
            "resource-type": {
              "import_prefix": "azext_aks_preview.vendored_sdks.azure_mgmt_preview_aks",
              "client_name": "ContainerServiceClient"
            },
            "show-operation": ".custom#aks_show",
            "client-factory": "._client_factory#cf_managed_clusters",
            "table-transformer": "._format#aks_show_table_format",
            "arguments": {
              "name": {
                "arg_type": "$name_type",
                "help": "Name of the managed cluster.",
                "required": true,
                "completer": {
                  "factory": "$get_resource_name_completion_list",
                  "kwargs": {
                    "resource_type": "Microsoft.ContainerService/ManagedClusters"
                  }
                }
              },
              "resource_group_name": {
                "options": [
                  "--resource-group-name"
                ],
                "required": true
              }
            }
          },
          "start": {
            "full-name": "aks start",
            "help": {
              "short-summary": "Start Managed Cluster",
              "long-summary": [
                "Starts a Stopped Managed Cluster."
              ]
            },
            "resource-type": {
              "import_prefix": "azext_aks_preview.vendored_sdks.azure_mgmt_preview_aks",
              "client_name": "ContainerServiceClient"
            },
            "operation": ".vendored_sdks.azure_mgmt_preview_aks.operations._managed_clusters_operations#ManagedClustersOperations.start",
            "client-factory": "._client_factory#cf_managed_clusters",
            "support-no-wait": true,
            "arguments": {
              "resource_group_name": {
                "options": [
                  "--resource-group-name"
                ],
                "help": "The name of the resource group.",
                "required": true
              },
              "resource_name": {
                "arg_type": "$name_type",
                "help": "Name of the managed cluster.",
                "required": true,
                "completer": {
                  "factory": "$get_resource_name_completion_list",
                  "kwargs": {
                    "resource_type": "Microsoft.ContainerService/ManagedClusters"
                  }
                }
              }
            }
          },
          "stop": {
            "full-name": "aks stop",
            "help": {
              "short-summary": "Stop Managed Cluster",
              "long-summary": [
                "Stops a Running Managed Cluster."
              ]
            },
            "resource-type": {
              "import_prefix": "azext_aks_preview.vendored_sdks.azure_mgmt_preview_aks",
              "client_name": "ContainerServiceClient"
            },
            "operation": ".vendored_sdks.azure_mgmt_preview_aks.operations._managed_clusters_operations#ManagedClustersOperations.stop",
            "client-factory": "._client_factory#cf_managed_clusters",
            "support-no-wait": true,
            "arguments": {
              "resource_group_name": {
                "options": [
                  "--resource-group-name"
                ],
                "help": "The name of the resource group.",
                "required": true
              },
              "resource_name": {
                "arg_type": "$name_type",
                "help": "Name of the managed cluster.",
                "required": true,
                "completer": {
                  "factory": "$get_resource_name_completion_list",
                  "kwargs": {
                    "resource_type": "Microsoft.ContainerService/ManagedClusters"
                  }
                }
              }
            }
          },
          "update": {
            "full-name": "aks update",
            "help": "Update a managed Kubernetes cluster properties, such as enable/disable cluster-autoscaler",
            "resource-type": {
              "import_prefix": "azext_aks_preview.vendored_sdks.azure_mgmt_preview_aks",
              "client_name": "ContainerServiceClient"
            },
            "operation": ".custom#aks_update",
            "client-factory": "._client_factory#cf_managed_clusters",
            "support-no-wait": true,
            "arguments": {
              "aad_admin_group_object_ids": {
                "options": [
                  "--aad-admin-group-object-ids"
                ],
                "help": "Comma seperated list of aad group object IDs that will be set as cluster admin."
              },
              "aad_tenant_id": {
                "options": [
                  "--aad-tenant-id"
                ],
                "help": "The ID of an Azure Active Directory tenant."
              },
              "aks_custom_headers": {
                "options": [
                  "--aks-custom-headers"
                ],
                "help": "Send custom headers. When specified, format should be Key1=Value1,Key2=Value2"
              },
              "api_server_authorized_ip_ranges": {
                "options": [
                  "--api-server-authorized-ip-ranges"
                ],
                "help": "Comma seperated list of authorized apiserver IP ranges. Set to \"\" to allow all traffic on a previously restricted cluster. Set to 0.0.0.0/32 to restrict apiserver traffic to node pools.",
                "validator": "._validators#validate_ip_ranges",
                "type": "<class 'str'>"
              },
              "assign_identity": {
                "options": [
                  "--assign-identity"
                ],
                "help": "(PREVIEW) Specify an existing user assigned identity to manage cluster resource group.",
                "validator": "._validators#validate_assign_identity",
                "type": "<class 'str'>"
              },
              "attach_acr": {
                "arg_type": "$acr_arg_type",
                "options": [
                  "--attach-acr"
                ],
                "help": "Grant the 'acrpull' role assignment to the ACR specified by name or resource ID.",
                "validator": "._validators#validate_acr"
              },
              "auto_upgrade_channel": {
                "arg_type": {
                  "factory": "$get_enum_type",
                  "kwargs": {
                    "data": [
                      "rapid",
                      "stable",
                      "patch",
                      "none"
                    ]
                  }
                },
                "options": [
                  "--auto-upgrade-channel"
                ],
                "help": "Specify the upgrade channel for autoupgrade. It could be rapid, stable, patch or none, none means disable autoupgrade.",
                "choices": [
                  "rapid",
                  "stable",
                  "patch",
                  "none"
                ],
                "action": "$EnumAction"
              },
              "cluster_autoscaler_profile": {
                "options": [
                  "--cluster-autoscaler-profile"
                ],
                "help": "Space-separated list of key=value pairs for configuring cluster autoscaler. Pass an empty string to clear the profile.",
                "nargs": "+",
                "validator": "._validators#validate_cluster_autoscaler_profile"
              },
              "detach_acr": {
                "arg_type": "$acr_arg_type",
                "options": [
                  "--detach-acr"
                ],
                "help": "Disable the 'acrpull' role assignment to the ACR specified by name or resource ID.",
                "validator": "._validators#validate_acr"
              },
              "disable_ahub": {
                "options": [
                  "--disable-ahub"
                ],
                "help": "Disable Azure Hybrid User Benefits (AHUB) feature for cluster.",
                "action": "store_true"
              },
              "disable_cluster_autoscaler": {
                "options": [
                  "--disable-cluster-autoscaler",
                  "-d"
                ],
                "help": "Disable cluster autoscaler.",
                "action": "store_true"
              },
              "disable_pod_identity": {
                "options": [
                  "--disable-pod-identity"
                ],
                "help": "(PREVIEW) Disable Pod Identity addon for cluster.",
                "action": "store_true"
              },
              "disable_pod_security_policy": {
                "options": [
                  "--disable-pod-security-policy"
                ],
                "help": "(PREVIEW) Disable pod security policy.",
                "action": "store_true"
              },
              "enable_aad": {
                "options": [
                  "--enable-aad"
                ],
                "help": "Enable managed AAD feature for cluster.",
                "action": "store_true"
              },
              "enable_ahub": {
                "options": [
                  "--enable-ahub"
                ],
                "help": "Enable Azure Hybrid User Benefits (AHUB) feature for cluster.",
                "action": "store_true"
              },
              "enable_cluster_autoscaler": {
                "options": [
                  "--enable-cluster-autoscaler",
                  "-e"
                ],
                "help": "Enable cluster autoscaler.",
                "action": "store_true"
              },
              "enable_managed_identity": {
                "options": [
                  "--enable-managed-identity"
                ],
                "help": "(PREVIEW) Update current cluster to managed identity to manage cluster resource group.",
                "action": "store_true"
              },
              "enable_pod_identity": {
                "options": [
                  "--enable-pod-identity"
                ],
                "help": "(PREVIEW) Enable Pod Identity addon for cluster.",
                "action": "store_true"
              },
              "enable_pod_security_policy": {
                "options": [
                  "--enable-pod-security-policy"
                ],
                "help": "(PREVIEW) Enable pod security policy.",
                "action": "store_true"
              },
              "load_balancer_idle_timeout": {
                "options": [
                  "--load-balancer-idle-timeout"
                ],
                "help": {
                  "short-summary": "Load balancer idle timeout in minutes.",
                  "long-summary": [
                    "Desired idle timeout for load balancer outbound flows, default is 30 minutes. Please specify a value in the range of [4, 100]."
                  ]
                },
                "validator": "._validators#validate_load_balancer_idle_timeout",
                "type": "<class 'int'>"
              },
              "load_balancer_managed_outbound_ip_count": {
                "options": [
                  "--load-balancer-managed-outbound-ip-count"
                ],
                "help": {
                  "short-summary": "Load balancer managed outbound IP count.",
                  "long-summary": [
                    "Desired number of managed outbound IPs for load balancer outbound connection. Valid for Standard SKU load balancer cluster only. If updated, it will wipe off the existing setting on Load balancer managed outbound IP count; Load balancer outbound IP resource IDs and Load balancer outbound IP prefix resource IDs."
                  ]
                },
                "type": "<class 'int'>"
              },
              "load_balancer_outbound_ip_prefixes": {
                "options": [
                  "--load-balancer-outbound-ip-prefixes"
                ],
                "help": {
                  "short-summary": "Load balancer outbound IP prefix resource IDs.",
                  "long-summary": [
                    "Comma-separated public IP prefix resource IDs for load balancer outbound connection. Valid for Standard SKU load balancer cluster only. If updated, it will wipe off the existing setting on Load balancer managed outbound IP count; Load balancer outbound IP resource IDs and Load balancer outbound IP prefix resource IDs."
                  ]
                },
                "validator": "._validators#validate_load_balancer_outbound_ip_prefixes",
                "type": "<class 'str'>"
              },
              "load_balancer_outbound_ips": {
                "options": [
                  "--load-balancer-outbound-ips"
                ],
                "help": {
                  "short-summary": "Load balancer outbound IP resource IDs.",
                  "long-summary": [
                    "Comma-separated public IP resource IDs for load balancer outbound connection. Valid for Standard SKU load balancer cluster only. If updated, it will wipe off the existing setting on Load balancer managed outbound IP count; Load balancer outbound IP resource IDs and Load balancer outbound IP prefix resource IDs."
                  ]
                },
                "validator": "._validators#validate_load_balancer_outbound_ips",
                "type": "<class 'str'>"
              },
              "load_balancer_outbound_ports": {
                "options": [
                  "--load-balancer-outbound-ports"
                ],
                "help": {
                  "short-summary": "Load balancer outbound allocated ports.",
                  "long-summary": [
                    "Desired static number of outbound ports per VM in the load balancer backend pool. By default, set to 0 which uses the default allocation based on the number of VMs. Please specify a value in the range of [0, 64000] that is a multiple of 8."
                  ]
                },
                "validator": "._validators#validate_load_balancer_outbound_ports",
                "type": "<class 'int'>"
              },
              "max_count": {
                "options": [
                  "--max-count"
                ],
                "help": "Maximum nodes count used for autoscaler, when \"--enable-cluster-autoscaler\" specified. Please specify the value in the range of [1, 100]",
                "validator": "._validators#validate_nodes_count",
                "type": "<class 'int'>"
              },
              "min_count": {
                "options": [
                  "--min-count"
                ],
                "help": "Minimun nodes count used for autoscaler, when \"--enable-cluster-autoscaler\" specified. Please specify the value in the range of [1, 100]",
                "validator": "._validators#validate_nodes_count",
                "type": "<class 'int'>"
              },
              "name": {
                "arg_type": "$name_type",
                "help": "Name of the managed cluster.",
                "required": true,
                "completer": {
                  "factory": "$get_resource_name_completion_list",
                  "kwargs": {
                    "resource_type": "Microsoft.ContainerService/ManagedClusters"
                  }
                }
              },
              "no_uptime_sla": {
                "options": [
                  "--no-uptime-sla"
                ],
                "help": "Change a paid managed cluster to a free one.",
                "action": "store_true"
              },
              "resource_group_name": {
                "options": [
                  "--resource-group-name"
                ],
                "required": true
              },
              "tags": {
                "arg_type": "$tags_type",
                "options": [
                  "--tags"
                ],
                "help": "The tags of the managed cluster. The managed cluster instance and all resources managed by the cloud provider will be tagged."
              },
              "update_cluster_autoscaler": {
                "options": [
                  "--update-cluster-autoscaler",
                  "-u"
                ],
                "help": "Update min-count or max-count for cluster autoscaler.",
                "action": "store_true"
              },
              "uptime_sla": {
                "options": [
                  "--uptime-sla"
                ],
                "help": "Enable a paid managed cluster service with a financially backed SLA.",
                "action": "store_true"
              },
              "yes": {
                "options": [
                  "--yes",
                  "-y"
                ],
                "help": "Do not prompt for confirmation.",
                "action": "store_true"
              }
            }
          },
          "upgrade": {
            "full-name": "aks upgrade",
            "help": {
              "short-summary": "Upgrade a managed Kubernetes cluster to a newer version.",
              "long-summary": [
                "Kubernetes will be unavailable during cluster upgrades."
              ]
            },
            "resource-type": {
              "import_prefix": "azext_aks_preview.vendored_sdks.azure_mgmt_preview_aks",
              "client_name": "ContainerServiceClient"
            },
            "operation": ".custom#aks_upgrade",
            "client-factory": "._client_factory#cf_managed_clusters",
            "support-no-wait": true,
            "arguments": {
              "control_plane_only": {
                "options": [
                  "--control-plane-only"
                ],
                "help": "Upgrade the cluster control plane only. If not specified, control plane AND all node pools will be upgraded.",
                "action": "store_true"
              },
              "kubernetes_version": {
                "options": [
                  "--kubernetes-version",
                  "-k"
                ],
                "help": {
                  "short-summary": "Version of Kubernetes to upgrade the cluster to, such as \"1.11.12\".",
                  "populator-commands": [
                    "az aks get-upgrades"
                  ]
                },
                "validator": "._validators#validate_k8s_version",
                "completer": "._completers#get_k8s_upgrades_completion_list"
              },
              "name": {
                "arg_type": "$name_type",
                "help": "Name of the managed cluster.",
                "required": true,
                "completer": {
                  "factory": "$get_resource_name_completion_list",
                  "kwargs": {
                    "resource_type": "Microsoft.ContainerService/ManagedClusters"
                  }
                }
              },
              "node_image_only": {
                "options": [
                  "--node-image-only"
                ],
                "help": "Only upgrade node image for agent pools.",
                "action": "store_true"
              },
              "resource_group_name": {
                "options": [
                  "--resource-group-name"
                ],
                "required": true
              },
              "yes": {
                "options": [
                  "--yes",
                  "-y"
                ],
                "help": "Do not prompt for confirmation.",
                "action": "store_true"
              }
            }
          },
          "wait": {
            "full-name": "aks wait",
            "resource-type": {
              "import_prefix": "azext_aks_preview.vendored_sdks.azure_mgmt_preview_aks",
              "client_name": "ContainerServiceClient"
            },
            "wait-operation": ".vendored_sdks.azure_mgmt_preview_aks.operations._managed_clusters_operations#ManagedClustersOperations.get",
            "client-factory": "._client_factory#cf_managed_clusters",
            "arguments": {
              "created": {
                "options": [
                  "--created"
                ],
                "help": "wait until created with 'provisioningState' at 'Succeeded'",
                "arg-group": "Wait Condition",
                "action": "store_true"
              },
              "custom": {
                "options": [
                  "--custom"
                ],
                "help": "Wait until the condition satisfies a custom JMESPath query. E.g. provisioningState!='InProgress', instanceView.statuses[?code=='PowerState/running']",
                "arg-group": "Wait Condition"
              },
              "deleted": {
                "options": [
                  "--deleted"
                ],
                "help": "wait until deleted",
                "arg-group": "Wait Condition",
                "action": "store_true"
              },
              "exists": {
                "options": [
                  "--exists"
                ],
                "help": "wait until the resource exists",
                "arg-group": "Wait Condition",
                "action": "store_true"
              },
              "interval": {
                "options": [
                  "--interval"
                ],
                "help": "polling interval in seconds",
                "arg-group": "Wait Condition",
                "default": 30,
                "type": "<class 'int'>"
              },
              "resource_group_name": {
                "options": [
                  "--resource-group-name"
                ],
                "help": "The name of the resource group.",
                "required": true
              },
              "resource_name": {
                "arg_type": "$name_type",
                "help": "Name of the managed cluster.",
                "required": true,
                "completer": {
                  "factory": "$get_resource_name_completion_list",
                  "kwargs": {
                    "resource_type": "Microsoft.ContainerService/ManagedClusters"
                  }
                }
              },
              "timeout": {
                "options": [
                  "--timeout"
                ],
                "help": "maximum wait in seconds",
                "arg-group": "Wait Condition",
                "default": 3600,
                "type": "<class 'int'>"
              },
              "updated": {
                "options": [
                  "--updated"
                ],
                "help": "wait until updated with provisioningState at 'Succeeded'",
                "arg-group": "Wait Condition",
                "action": "store_true"
              }
            }
          }
        },
        "command-groups": {
          "nodepool": {
            "full-name": "aks nodepool",
            "help": "Commands to manage node pools in managed Kubernetes cluster.",
            "commands": {
              "add": {
                "full-name": "aks nodepool add",
                "help": "Add a node pool to the managed Kubernetes cluster.",
                "resource-type": {
                  "import_prefix": "azext_aks_preview.vendored_sdks.azure_mgmt_preview_aks",
                  "client_name": "ContainerServiceClient"
                },
                "operation": ".custom#aks_agentpool_add",
                "client-factory": "._client_factory#cf_agent_pools",
                "support-no-wait": true,
                "arguments": {
                  "aks_custom_headers": {
                    "options": [
                      "--aks-custom-headers"
                    ],
                    "help": "Send custom headers. When specified, format should be Key1=Value1,Key2=Value2"
                  },
                  "cluster_name": {
                    "options": [
                      "--cluster-name"
                    ],
                    "help": "The cluster name.",
                    "required": true,
                    "type": "<class 'str'>"
                  },
                  "enable_cluster_autoscaler": {
                    "options": [
                      "--enable-cluster-autoscaler",
                      "-e"
                    ],
                    "help": "Enable cluster autoscaler.",
                    "action": "store_true"
                  },
                  "enable_encryption_at_host": {
                    "options": [
                      "--enable-encryption-at-host"
                    ],
                    "help": "Enable EncryptionAtHost on agent node pool.",
                    "action": "store_true"
                  },
                  "enable_node_public_ip": {
                    "preview": true,
                    "options": [
                      "--enable-node-public-ip"
                    ],
                    "help": "Enable VMSS node public IP.",
                    "action": "store_true"
                  },
                  "eviction_policy": {
                    "arg_type": {
                      "factory": "$get_enum_type",
                      "kwargs": {
                        "data": [
                          "Delete",
                          "Deallocate"
                        ]
                      }
                    },
                    "options": [
                      "--eviction-policy"
                    ],
                    "help": "The eviction policy of the Spot node pool. It can only be set when --priority is Spot.",
                    "choices": [
                      "Delete",
                      "Deallocate"
                    ],
                    "default": "Delete",
                    "action": "$EnumAction",
                    "validator": "._validators#validate_eviction_policy"
                  },
                  "kubelet_config": {
                    "options": [
                      "--kubelet-config"
                    ],
                    "help": "Kubelet configurations for agent nodes.",
                    "type": "<class 'str'>"
                  },
                  "kubernetes_version": {
                    "options": [
                      "--kubernetes-version",
                      "-k"
                    ],
                    "help": {
                      "short-summary": "Version of Kubernetes to use for creating the cluster, such as \"1.7.12\" or \"1.8.7\".",
                      "populator-commands": [
                        "az aks get-versions"
                      ]
                    },
                    "validator": "._validators#validate_k8s_version"
                  },
                  "labels": {
                    "options": [
                      "--labels"
                    ],
                    "help": "The node labels for the node pool. You can't change the node labels through CLI after the node pool is created. See https://aka.ms/node-labels for syntax of labels.",
                    "nargs": "*",
                    "validator": "._validators#validate_nodepool_labels"
                  },
                  "linux_os_config": {
                    "options": [
                      "--linux-os-config"
                    ],
                    "help": "OS configurations for Linux agent nodes.",
                    "type": "<class 'str'>"
                  },
                  "max_count": {
                    "options": [
                      "--max-count"
                    ],
                    "help": "Maximum nodes count used for autoscaler, when \"--enable-cluster-autoscaler\" specified. Please specify the value in the range of [1, 100]"
                  },
                  "max_pods": {
                    "options": [
                      "--max-pods",
                      "-m"
                    ],
                    "help": {
                      "short-summary": "The maximum number of pods deployable to a node.",
                      "long-summary": [
                        "If not specified, defaults to 110, or 30 for advanced networking configurations."
                      ]
                    },
                    "type": "<class 'int'>"
                  },
                  "max_surge": {
                    "options": [
                      "--max-surge"
                    ],
                    "help": "Extra nodes used to speed upgrade. When specified, it represents the number or percent used, eg. 5 or 33%",
                    "validator": "._validators#validate_max_surge",
                    "type": "<class 'str'>"
                  },
                  "min_count": {
                    "options": [
                      "--min-count"
                    ],
                    "help": "Minimun nodes count used for autoscaler, when \"--enable-cluster-autoscaler\" specified. Please specify the value in the range of [1, 100]"
                  },
                  "mode": {
                    "arg_type": {
                      "factory": "$get_enum_type",
                      "kwargs": {
                        "data": [
                          "System",
                          "User"
                        ]
                      }
                    },
                    "options": [
                      "--mode"
                    ],
                    "help": "The mode for a node pool which defines a node pool's primary function. If set as \"System\", AKS prefers system pods scheduling to node pools with mode `System`. Learn more at https://aka.ms/aks/nodepool/mode.",
                    "choices": [
                      "System",
                      "User"
                    ],
                    "default": "User",
                    "action": "$EnumAction"
                  },
                  "node_count": {
                    "options": [
                      "--node-count",
                      "-c"
                    ],
                    "help": "Number of nodes in the Kubernetes agent pool. After creating a cluster, you can change the size of its node pool with `az aks scale`.",
                    "default": 3,
                    "type": "<class 'int'>"
                  },
                  "node_osdisk_size": {
                    "options": [
                      "--node-osdisk-size"
                    ],
                    "help": "Size in GB of the OS disk for each node in the agent pool. Minimum 30 GB."
                  },
                  "node_osdisk_type": {
                    "options": [
                      "--node-osdisk-type"
                    ],
                    "help": "OS disk type to be used for machines in a given agent pool. Defaults to 'Managed'. May not be changed for this pool after creation."
                  },
                  "node_taints": {
                    "options": [
                      "--node-taints"
                    ],
                    "help": "The node taints for the node pool. You can't change the node taints through CLI after the node pool is created.",
                    "validator": "._validators#validate_taints",
                    "type": "<class 'str'>"
                  },
                  "node_vm_size": {
                    "options": [
                      "--node-vm-size",
                      "-s"
                    ],
                    "help": "Size of Virtual Machines to create as Kubernetes nodes.",
                    "completer": "._completers#get_vm_size_completion_list"
                  },
                  "node_zones": {
                    "arg_type": "$zones_type",
                    "options": [
                      "--node-zones",
                      "--zones",
                      "-z"
                    ],
                    "help": "(will be deprecated, use --zones) Availability zones where agent nodes will be placed."
                  },
                  "nodepool_name": {
                    "options": [
                      "--name",
                      "-n"
                    ],
                    "help": "The node pool name.",
                    "required": true,
                    "validator": "._validators#validate_nodepool_name",
                    "type": "<class 'str'>"
                  },
                  "os_type": {
                    "options": [
                      "--os-type"
                    ],
                    "help": "The OS Type. Linux or Windows.",
                    "default": "Linux",
                    "type": "<class 'str'>"
                  },
                  "pod_subnet_id": {
                    "options": [
                      "--pod-subnet-id"
                    ],
                    "help": "The ID of a subnet in an existing VNet into which to assign pods in the cluster (requires azure network-plugin)",
                    "validator": "._validators#validate_pod_subnet_id",
                    "type": "<class 'str'>"
                  },
                  "ppg": {
                    "options": [
                      "--ppg"
                    ],
                    "help": "The ID of a PPG."
                  },
                  "priority": {
                    "arg_type": {
                      "factory": "$get_enum_type",
                      "kwargs": {
                        "data": [
                          "Regular",
                          "Spot"
                        ]
                      }
                    },
                    "options": [
                      "--priority"
                    ],
                    "help": "The priority of the node pool.",
                    "choices": [
                      "Regular",
                      "Spot"
                    ],
                    "default": "Regular",
                    "action": "$EnumAction",
                    "validator": "._validators#validate_priority"
                  },
                  "resource_group_name": {
                    "options": [
                      "--resource-group-name"
                    ],
                    "required": true
                  },
                  "spot_max_price": {
                    "options": [
                      "--spot-max-price"
                    ],
                    "help": "It can only be set when --priority is Spot. Specify the maximum price you are willing to pay in US Dollars. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand. It can only include up to 5 decimal places.",
                    "default": NaN,
                    "validator": "._validators#validate_spot_max_price",
                    "type": "<class 'float'>"
                  },
                  "tags": {
                    "arg_type": "$tags_type",
                    "options": [
                      "--tags"
                    ]
                  },
                  "vnet_subnet_id": {
                    "options": [
                      "--vnet-subnet-id"
                    ],
                    "help": "The ID of a subnet in an existing VNet into which to deploy the cluster.",
                    "validator": "._validators#validate_vnet_subnet_id",
                    "type": "<class 'str'>"
                  }
                }
              },
              "delete": {
                "full-name": "aks nodepool delete",
                "help": "Delete the agent pool in the managed Kubernetes cluster.",
                "resource-type": {
                  "import_prefix": "azext_aks_preview.vendored_sdks.azure_mgmt_preview_aks",
                  "client_name": "ContainerServiceClient"
                },
                "operation": ".custom#aks_agentpool_delete",
                "client-factory": "._client_factory#cf_agent_pools",
                "support-no-wait": true,
                "arguments": {
                  "cluster_name": {
                    "options": [
                      "--cluster-name"
                    ],
                    "help": "The cluster name.",
                    "required": true,
                    "type": "<class 'str'>"
                  },
                  "nodepool_name": {
                    "options": [
                      "--name",
                      "-n"
                    ],
                    "help": "The node pool name.",
                    "required": true,
                    "validator": "._validators#validate_nodepool_name",
                    "type": "<class 'str'>"
                  },
                  "resource_group_name": {
                    "options": [
                      "--resource-group-name"
                    ],
                    "required": true
                  }
                }
              },
              "get-upgrades": {
                "full-name": "aks nodepool get-upgrades",
                "help": "Get the available upgrade versions for an agent pool of the managed Kubernetes cluster.",
                "resource-type": {
                  "import_prefix": "azext_aks_preview.vendored_sdks.azure_mgmt_preview_aks",
                  "client_name": "ContainerServiceClient"
                },
                "operation": ".custom#aks_agentpool_get_upgrade_profile",
                "client-factory": "._client_factory#cf_agent_pools",
                "arguments": {
                  "cluster_name": {
                    "options": [
                      "--cluster-name"
                    ],
                    "help": "The cluster name.",
                    "required": true,
                    "type": "<class 'str'>"
                  },
                  "nodepool_name": {
                    "options": [
                      "--nodepool-name"
                    ],
                    "help": "name of the node pool.",
                    "required": true
                  },
                  "resource_group_name": {
                    "options": [
                      "--resource-group-name"
                    ],
                    "required": true
                  }
                }
              },
              "list": {
                "full-name": "aks nodepool list",
                "help": "List node pools in the managed Kubernetes cluster.",
                "resource-type": {
                  "import_prefix": "azext_aks_preview.vendored_sdks.azure_mgmt_preview_aks",
                  "client_name": "ContainerServiceClient"
                },
                "operation": ".custom#aks_agentpool_list",
                "client-factory": "._client_factory#cf_agent_pools",
                "table-transformer": "._format#aks_agentpool_list_table_format",
                "arguments": {
                  "cluster_name": {
                    "options": [
                      "--cluster-name"
                    ],
                    "help": "The cluster name.",
                    "required": true,
                    "type": "<class 'str'>"
                  },
                  "resource_group_name": {
                    "options": [
                      "--resource-group-name"
                    ],
                    "required": true
                  }
                }
              },
              "scale": {
                "full-name": "aks nodepool scale",
                "help": "Scale the node pool in a managed Kubernetes cluster.",
                "resource-type": {
                  "import_prefix": "azext_aks_preview.vendored_sdks.azure_mgmt_preview_aks",
                  "client_name": "ContainerServiceClient"
                },
                "operation": ".custom#aks_agentpool_scale",
                "client-factory": "._client_factory#cf_agent_pools",
                "support-no-wait": true,
                "arguments": {
                  "cluster_name": {
                    "options": [
                      "--cluster-name"
                    ],
                    "help": "The cluster name.",
                    "required": true,
                    "type": "<class 'str'>"
                  },
                  "node_count": {
                    "options": [
                      "--node-count",
                      "-c"
                    ],
                    "help": "Number of nodes in the Kubernetes node pool.",
                    "default": 3,
                    "type": "<class 'int'>"
                  },
                  "nodepool_name": {
                    "options": [
                      "--name",
                      "-n"
                    ],
                    "help": "The node pool name.",
                    "required": true,
                    "validator": "._validators#validate_nodepool_name",
                    "type": "<class 'str'>"
                  },
                  "resource_group_name": {
                    "options": [
                      "--resource-group-name"
                    ],
                    "required": true
                  }
                }
              },
              "show": {
                "full-name": "aks nodepool show",
                "help": "Show the details for a node pool in the managed Kubernetes cluster.",
                "resource-type": {
                  "import_prefix": "azext_aks_preview.vendored_sdks.azure_mgmt_preview_aks",
                  "client_name": "ContainerServiceClient"
                },
                "show-operation": ".custom#aks_agentpool_show",
                "client-factory": "._client_factory#cf_agent_pools",
                "table-transformer": "._format#aks_agentpool_show_table_format",
                "arguments": {
                  "cluster_name": {
                    "options": [
                      "--cluster-name"
                    ],
                    "help": "The cluster name.",
                    "required": true,
                    "type": "<class 'str'>"
                  },
                  "nodepool_name": {
                    "options": [
                      "--name",
                      "-n"
                    ],
                    "help": "The node pool name.",
                    "required": true,
                    "validator": "._validators#validate_nodepool_name",
                    "type": "<class 'str'>"
                  },
                  "resource_group_name": {
                    "options": [
                      "--resource-group-name"
                    ],
                    "required": true
                  }
                }
              },
              "update": {
                "full-name": "aks nodepool update",
                "help": "Update a node pool to enable/disable cluster-autoscaler or change min-count or max-count",
                "resource-type": {
                  "import_prefix": "azext_aks_preview.vendored_sdks.azure_mgmt_preview_aks",
                  "client_name": "ContainerServiceClient"
                },
                "operation": ".custom#aks_agentpool_update",
                "client-factory": "._client_factory#cf_agent_pools",
                "support-no-wait": true,
                "arguments": {
                  "cluster_name": {
                    "options": [
                      "--cluster-name"
                    ],
                    "help": "The cluster name.",
                    "required": true,
                    "type": "<class 'str'>"
                  },
                  "disable_cluster_autoscaler": {
                    "options": [
                      "--disable-cluster-autoscaler",
                      "-d"
                    ],
                    "help": "Disable cluster autoscaler.",
                    "action": "store_true"
                  },
                  "enable_cluster_autoscaler": {
                    "options": [
                      "--enable-cluster-autoscaler",
                      "-e"
                    ],
                    "help": "Enable cluster autoscaler.",
                    "action": "store_true"
                  },
                  "max_count": {
                    "options": [
                      "--max-count"
                    ],
                    "help": "Maximum nodes count used for autoscaler, when \"--enable-cluster-autoscaler\" specified. Please specify the value in the range of [1, 100]"
                  },
                  "max_surge": {
                    "options": [
                      "--max-surge"
                    ],
                    "help": "Extra nodes used to speed upgrade. When specified, it represents the number or percent used, eg. 5 or 33%",
                    "validator": "._validators#validate_max_surge",
                    "type": "<class 'str'>"
                  },
                  "min_count": {
                    "options": [
                      "--min-count"
                    ],
                    "help": "Minimun nodes count used for autoscaler, when \"--enable-cluster-autoscaler\" specified. Please specify the value in the range of [1, 100]"
                  },
                  "mode": {
                    "arg_type": {
                      "factory": "$get_enum_type",
                      "kwargs": {
                        "data": [
                          "System",
                          "User"
                        ]
                      }
                    },
                    "options": [
                      "--mode"
                    ],
                    "help": "The mode for a node pool which defines a node pool's primary function. If set as \"System\", AKS prefers system pods scheduling to node pools with mode `System`. Learn more at https://aka.ms/aks/nodepool/mode.",
                    "choices": [
                      "System",
                      "User"
                    ],
                    "action": "$EnumAction"
                  },
                  "nodepool_name": {
                    "options": [
                      "--name",
                      "-n"
                    ],
                    "help": "The node pool name.",
                    "required": true,
                    "validator": "._validators#validate_nodepool_name",
                    "type": "<class 'str'>"
                  },
                  "resource_group_name": {
                    "options": [
                      "--resource-group-name"
                    ],
                    "required": true
                  },
                  "tags": {
                    "arg_type": "$tags_type",
                    "options": [
                      "--tags"
                    ]
                  },
                  "update_cluster_autoscaler": {
                    "options": [
                      "--update-cluster-autoscaler",
                      "-u"
                    ],
                    "help": "Update min-count or max-count for cluster autoscaler.",
                    "action": "store_true"
                  }
                }
              },
              "upgrade": {
                "full-name": "aks nodepool upgrade",
                "help": "Upgrade the node pool in a managed Kubernetes cluster.",
                "resource-type": {
                  "import_prefix": "azext_aks_preview.vendored_sdks.azure_mgmt_preview_aks",
                  "client_name": "ContainerServiceClient"
                },
                "operation": ".custom#aks_agentpool_upgrade",
                "client-factory": "._client_factory#cf_agent_pools",
                "support-no-wait": true,
                "arguments": {
                  "cluster_name": {
                    "options": [
                      "--cluster-name"
                    ],
                    "help": "The cluster name.",
                    "required": true,
                    "type": "<class 'str'>"
                  },
                  "kubernetes_version": {
                    "options": [
                      "--kubernetes-version",
                      "-k"
                    ],
                    "help": "Version of Kubernetes to upgrade the node pool to, such as \"1.11.12\".",
                    "validator": "._validators#validate_k8s_version"
                  },
                  "max_surge": {
                    "options": [
                      "--max-surge"
                    ],
                    "help": "Extra nodes used to speed upgrade. When specified, it represents the number or percent used, eg. 5 or 33%",
                    "validator": "._validators#validate_max_surge",
                    "type": "<class 'str'>"
                  },
                  "node_image_only": {
                    "options": [
                      "--node-image-only"
                    ],
                    "help": "Only upgrade agent pool's node image.",
                    "action": "store_true"
                  },
                  "nodepool_name": {
                    "options": [
                      "--name",
                      "-n"
                    ],
                    "help": "The node pool name.",
                    "required": true,
                    "validator": "._validators#validate_nodepool_name",
                    "type": "<class 'str'>"
                  },
                  "resource_group_name": {
                    "options": [
                      "--resource-group-name"
                    ],
                    "required": true
                  }
                }
              }
            }
          },
          "pod-identity": {
            "full-name": "aks pod-identity",
            "help": "Commands to manage pod identities in managed Kubernetes cluster.",
            "commands": {
              "add": {
                "full-name": "aks pod-identity add",
                "help": "Add a pod identity to a managed Kubernetes cluster",
                "resource-type": {
                  "import_prefix": "azext_aks_preview.vendored_sdks.azure_mgmt_preview_aks",
                  "client_name": "ContainerServiceClient"
                },
                "operation": ".custom#aks_pod_identity_add",
                "client-factory": "._client_factory#cf_managed_clusters",
                "arguments": {
                  "cluster_name": {
                    "options": [
                      "--cluster-name"
                    ],
                    "help": "The cluster name.",
                    "required": true,
                    "type": "<class 'str'>"
                  },
                  "identity_name": {
                    "options": [
                      "--name",
                      "-n"
                    ],
                    "help": "The pod identity name. Generate if not specified.",
                    "validator": {
                      "factory": "._validators#validate_pod_identity_resource_name",
                      "kwargs": {
                        "attr_name": "identity_name",
                        "required": false
                      }
                    },
                    "type": "<class 'str'>"
                  },
                  "identity_namespace": {
                    "options": [
                      "--namespace"
                    ],
                    "help": "The pod identity namespace.",
                    "required": true,
                    "type": "<class 'str'>"
                  },
                  "identity_resource_id": {
                    "options": [
                      "--identity-resource-id"
                    ],
                    "help": "Resource id of the identity to use.",
                    "required": true,
                    "type": "<class 'str'>"
                  },
                  "resource_group_name": {
                    "options": [
                      "--resource-group-name"
                    ],
                    "required": true
                  }
                }
              },
              "delete": {
                "full-name": "aks pod-identity delete",
                "help": "Remove a pod identity from a managed Kubernetes cluster",
                "resource-type": {
                  "import_prefix": "azext_aks_preview.vendored_sdks.azure_mgmt_preview_aks",
                  "client_name": "ContainerServiceClient"
                },
                "operation": ".custom#aks_pod_identity_delete",
                "client-factory": "._client_factory#cf_managed_clusters",
                "arguments": {
                  "cluster_name": {
                    "options": [
                      "--cluster-name"
                    ],
                    "help": "The cluster name.",
                    "required": true,
                    "type": "<class 'str'>"
                  },
                  "identity_name": {
                    "options": [
                      "--name",
                      "-n"
                    ],
                    "help": "The pod identity name.",
                    "required": true,
                    "validator": {
                      "factory": "._validators#validate_pod_identity_resource_name",
                      "kwargs": {
                        "attr_name": "identity_name",
                        "required": true
                      }
                    },
                    "type": "<class 'str'>"
                  },
                  "identity_namespace": {
                    "options": [
                      "--namespace"
                    ],
                    "help": "The pod identity namespace.",
                    "required": true,
                    "type": "<class 'str'>"
                  },
                  "resource_group_name": {
                    "options": [
                      "--resource-group-name"
                    ],
                    "required": true
                  }
                }
              },
              "list": {
                "full-name": "aks pod-identity list",
                "help": "List pod identities in a managed Kubernetes cluster",
                "resource-type": {
                  "import_prefix": "azext_aks_preview.vendored_sdks.azure_mgmt_preview_aks",
                  "client_name": "ContainerServiceClient"
                },
                "operation": ".custom#aks_pod_identity_list",
                "client-factory": "._client_factory#cf_managed_clusters",
                "table-transformer": "._format#aks_pod_identities_table_format",
                "arguments": {
                  "cluster_name": {
                    "options": [
                      "--cluster-name"
                    ],
                    "help": "The cluster name.",
                    "required": true,
                    "type": "<class 'str'>"
                  },
                  "resource_group_name": {
                    "options": [
                      "--resource-group-name"
                    ],
                    "required": true
                  }
                }
              }
            },
            "command-groups": {
              "exception": {
                "full-name": "aks pod-identity exception",
                "help": "Commands to manage pod identity exceptions in managed Kubernetes cluster.",
                "commands": {
                  "add": {
                    "full-name": "aks pod-identity exception add",
                    "help": "Add a pod identity exception to a managed Kubernetes cluster",
                    "resource-type": {
                      "import_prefix": "azext_aks_preview.vendored_sdks.azure_mgmt_preview_aks",
                      "client_name": "ContainerServiceClient"
                    },
                    "operation": ".custom#aks_pod_identity_exception_add",
                    "client-factory": "._client_factory#cf_managed_clusters",
                    "arguments": {
                      "cluster_name": {
                        "options": [
                          "--cluster-name"
                        ],
                        "help": "The cluster name.",
                        "required": true,
                        "type": "<class 'str'>"
                      },
                      "exc_name": {
                        "options": [
                          "--name",
                          "-n"
                        ],
                        "help": "The pod identity exception name. Generate if not specified.",
                        "validator": {
                          "factory": "._validators#validate_pod_identity_resource_name",
                          "kwargs": {
                            "attr_name": "exc_name",
                            "required": false
                          }
                        },
                        "type": "<class 'str'>"
                      },
                      "exc_namespace": {
                        "options": [
                          "--namespace"
                        ],
                        "help": "The pod identity exception namespace.",
                        "required": true,
                        "validator": "._validators#validate_pod_identity_resource_namespace",
                        "type": "<class 'str'>"
                      },
                      "pod_labels": {
                        "options": [
                          "--pod-labels"
                        ],
                        "help": "space-separated labels: key=value [key=value ...].",
                        "nargs": "*",
                        "required": true,
                        "validator": "._validators#validate_pod_identity_pod_labels"
                      },
                      "resource_group_name": {
                        "options": [
                          "--resource-group-name"
                        ],
                        "required": true
                      }
                    }
                  },
                  "delete": {
                    "full-name": "aks pod-identity exception delete",
                    "help": "Remove a pod identity exception from a managed Kubernetes cluster",
                    "resource-type": {
                      "import_prefix": "azext_aks_preview.vendored_sdks.azure_mgmt_preview_aks",
                      "client_name": "ContainerServiceClient"
                    },
                    "operation": ".custom#aks_pod_identity_exception_delete",
                    "client-factory": "._client_factory#cf_managed_clusters",
                    "arguments": {
                      "cluster_name": {
                        "options": [
                          "--cluster-name"
                        ],
                        "help": "The cluster name.",
                        "required": true,
                        "type": "<class 'str'>"
                      },
                      "exc_name": {
                        "options": [
                          "--name",
                          "-n"
                        ],
                        "help": "The pod identity exception name to remove.",
                        "required": true,
                        "validator": {
                          "factory": "._validators#validate_pod_identity_resource_name",
                          "kwargs": {
                            "attr_name": "exc_name",
                            "required": true
                          }
                        },
                        "type": "<class 'str'>"
                      },
                      "exc_namespace": {
                        "options": [
                          "--namespace"
                        ],
                        "help": "The pod identity exception namespace to remove.",
                        "required": true,
                        "validator": "._validators#validate_pod_identity_resource_namespace",
                        "type": "<class 'str'>"
                      },
                      "resource_group_name": {
                        "options": [
                          "--resource-group-name"
                        ],
                        "required": true
                      }
                    }
                  },
                  "list": {
                    "full-name": "aks pod-identity exception list",
                    "help": "List pod identity exceptions in a managed Kubernetes cluster",
                    "resource-type": {
                      "import_prefix": "azext_aks_preview.vendored_sdks.azure_mgmt_preview_aks",
                      "client_name": "ContainerServiceClient"
                    },
                    "operation": ".custom#aks_pod_identity_exception_list",
                    "client-factory": "._client_factory#cf_managed_clusters",
                    "table-transformer": "._format#aks_pod_identity_exceptions_table_format",
                    "arguments": {
                      "cluster_name": {
                        "options": [
                          "--cluster-name"
                        ],
                        "help": "The cluster name.",
                        "required": true,
                        "type": "<class 'str'>"
                      },
                      "resource_group_name": {
                        "options": [
                          "--resource-group-name"
                        ],
                        "required": true
                      }
                    }
                  },
                  "update": {
                    "full-name": "aks pod-identity exception update",
                    "help": "Update a pod identity exception in a managed Kubernetes cluster",
                    "resource-type": {
                      "import_prefix": "azext_aks_preview.vendored_sdks.azure_mgmt_preview_aks",
                      "client_name": "ContainerServiceClient"
                    },
                    "operation": ".custom#aks_pod_identity_exception_update",
                    "client-factory": "._client_factory#cf_managed_clusters",
                    "arguments": {
                      "cluster_name": {
                        "options": [
                          "--cluster-name"
                        ],
                        "help": "The cluster name.",
                        "required": true,
                        "type": "<class 'str'>"
                      },
                      "exc_name": {
                        "options": [
                          "--name",
                          "-n"
                        ],
                        "help": "The pod identity exception name to remove.",
                        "required": true,
                        "validator": {
                          "factory": "._validators#validate_pod_identity_resource_name",
                          "kwargs": {
                            "attr_name": "exc_name",
                            "required": true
                          }
                        },
                        "type": "<class 'str'>"
                      },
                      "exc_namespace": {
                        "options": [
                          "--namespace"
                        ],
                        "help": "The pod identity exception namespace to remove.",
                        "required": true,
                        "validator": "._validators#validate_pod_identity_resource_namespace",
                        "type": "<class 'str'>"
                      },
                      "pod_labels": {
                        "options": [
                          "--pod-labels"
                        ],
                        "help": "pod labels in key=value [key=value ...].",
                        "nargs": "*",
                        "required": true,
                        "validator": "._validators#validate_pod_identity_pod_labels"
                      },
                      "resource_group_name": {
                        "options": [
                          "--resource-group-name"
                        ],
                        "required": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}